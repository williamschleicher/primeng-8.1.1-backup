{"version":3,"sources":["webpack:///./src/app/showcase/components/chips/chipsdemo.html","webpack:///./src/app/components/chips/chips.ts","webpack:///./src/app/showcase/components/chips/chipsdemo-routing.module.ts","webpack:///./src/app/showcase/components/chips/chipsdemo.module.ts","webpack:///./src/app/showcase/components/chips/chipsdemo.ts"],"names":[],"mappings":"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","file":"components-chips-chipsdemo-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">Chips</span>\\r\\n        <span>Chips is used to enter multiple values on an inputfield.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <h3 class=\\\"first\\\">Basic</h3>\\r\\n    <p-chips [(ngModel)]=\\\"values1\\\"></p-chips>\\r\\n    \\r\\n    <h3>Template</h3>\\r\\n    <p-chips [(ngModel)]=\\\"values2\\\">\\r\\n        <ng-template let-item pTemplate=\\\"item\\\">\\r\\n            {{item}} - (active) <i class=\\\"fa fa-user\\\" style=\\\"margin-right:2em\\\"></i>\\r\\n        </ng-template>\\r\\n    </p-chips>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;ChipsModule&#125; from 'primeng/chips';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>Chips requires an array as its model.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-chips [(ngModel)]=\\\"values\\\"&gt;&lt;/p-chips&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class MyModel &#123;\\r\\n\\r\\n    values: string[];\\r\\n\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n            <h3>Model Driven Forms</h3>\\r\\n            <p>Chips can be used in a model driven form as well.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-chips formControlName=\\\"cities\\\"&gt;&lt;/p-chips&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Custom Content</h3>\\r\\n            <p>A chip is customized using a ng-template element where the value is passed as the implicit variable.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-chips [(ngModel)]=\\\"values\\\"&gt;\\r\\n    &lt;ng-template let-item pTemplate=\\\"item\\\"&gt;\\r\\n        &#123;&#123;item&#125;&#125; - (active) &lt;i class=\\\"fa fa-user\\\"&gt;&lt;/i&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n&lt;/p-chips&gt;\\r\\n</code>\\r\\n</pre>\\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                    <tr>\\r\\n                        <th>Name</th>\\r\\n                        <th>Type</th>\\r\\n                        <th>Default</th>\\r\\n                        <th>Description</th>\\r\\n                    </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>field</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Name of the property to display on a chip.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>max</td>\\r\\n                            <td>number</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Maximum number of entries allowed.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>disabled</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When present, it specifies that the element should be disabled.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>placeholder</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Advisory information to display on input.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>tabindex</td>\\r\\n                            <td>number</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Index of the element in tabbing order.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>inputId</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Identifier of the focus input to match a label defined for the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>allowDuplicate</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>true</td>\\r\\n                            <td>Whether to allow duplicate values or not.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>inputStyle</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the input field.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>inputStyleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the input field.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>addOnTab</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Whether to add an item on tab key press.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>addOnBlur</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Whether to add an item when the input loses focus.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                    <tr>\\r\\n                        <th>Name</th>\\r\\n                        <th>Parameters</th>\\r\\n                        <th>Description</th>\\r\\n                    </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>onAdd</td>\\r\\n                            <td>originalEvent: Browser event <br >\\r\\n                                value: Added item value\\r\\n                            </td>\\r\\n                            <td>Callback to invoke when a value is added.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onRemove</td>\\r\\n                            <td>originalEvent: Browser event <br >\\r\\n                                value: Added item value\\r\\n                            </td>\\r\\n                            <td>Callback to invoke when a value is removed.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onChipClick</td>\\r\\n                            <td>originalEvent: Browser event <br >\\r\\n                                value: Clicked item value\\r\\n                            </td>\\r\\n                            <td>Callback to invoke when a chip is clicked.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onFocus</td>\\r\\n                            <td>originalEvent: Browser event</td>\\r\\n                            <td>Callback to invoke when a input is focused.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onBlur</td>\\r\\n                            <td>originalEvent: Browser event</td>\\r\\n                            <td>Callback to invoke when a input loses focus.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-chips</td>\\r\\n                            <td>Container element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-chips-token</td>\\r\\n                            <td>Chip element container.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-chips-token-icon</td>\\r\\n                            <td>Icon of a chip.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-chips-token-label</td>\\r\\n                            <td>Label of a chip.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-chips-input-token</td>\\r\\n                            <td>Container of input element.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/chips\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\r\\n&lt;p-chips [(ngModel)]=\\\"values1\\\" &gt;&lt;/p-chips&gt;\\r\\n\\r\\n&lt;h3&gt;ng-template&lt;/h3&gt;\\r\\n&lt;p-chips [(ngModel)]=\\\"values2\\\"&gt;\\r\\n    &lt;ng-template let-item pTemplate=\\\"item\\\"&gt;\\r\\n        &#123;&#123;item&#125;&#125; - (active) &lt;i class=\\\"fa fa-user\\\" style=\\\"margin-right:2em\\\"&gt;&lt;/i&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n&lt;/p-chips&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class ChipsDemo &#123;\\r\\n\\r\\n    values1: string[];\\r\\n    \\r\\n    values2: string[];\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\\r\\n\"","import {NgModule,Component,ElementRef,Input,Output,EventEmitter,AfterContentInit,ContentChildren,QueryList,TemplateRef,IterableDiffers,forwardRef,ViewChild} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule,PrimeTemplate} from '../common/shared';\r\nimport {InputTextModule} from '../inputtext/inputtext';\r\nimport {DomHandler} from '../dom/domhandler';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const CHIPS_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => Chips),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-chips',\r\n    template: `\r\n        <div [ngClass]=\"'ui-chips ui-widget'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick($event)\">\r\n            <ul [ngClass]=\"{'ui-inputtext ui-state-default ui-corner-all':true,'ui-state-focus':focus,'ui-state-disabled':disabled}\">\r\n                <li #token *ngFor=\"let item of value; let i = index;\" class=\"ui-chips-token ui-state-highlight ui-corner-all\" (click)=\"onItemClick($event, item)\">\r\n                    <span *ngIf=\"!disabled\" class=\"ui-chips-token-icon pi pi-fw pi-times\" (click)=\"removeItem($event,i)\"></span>\r\n                    <span *ngIf=\"!itemTemplate\" class=\"ui-chips-token-label\">{{field ? resolveFieldData(item,field) : item}}</span>\r\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\r\n                </li>\r\n                <li class=\"ui-chips-input-token\">\r\n                    <input #inputtext type=\"text\" [attr.id]=\"inputId\" [attr.placeholder]=\"(value && value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" (keydown)=\"onKeydown($event)\" \r\n                        (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" [disabled]=\"disabled\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\">\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    `,\r\n    providers: [CHIPS_VALUE_ACCESSOR]\r\n})\r\nexport class Chips implements AfterContentInit,ControlValueAccessor {\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n    \r\n    @Input() disabled: boolean;\r\n    \r\n    @Input() field: string;\r\n    \r\n    @Input() placeholder: string;\r\n    \r\n    @Input() max: number;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() inputId: string;\r\n    \r\n    @Input() allowDuplicate: boolean = true;\r\n    \r\n    @Input() inputStyle: any;\r\n    \r\n    @Input() inputStyleClass: any;\r\n    \r\n    @Input() addOnTab: boolean;\r\n\r\n    @Input() addOnBlur: boolean;\r\n\r\n    @Output() onAdd: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onRemove: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onChipClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild('inputtext', { static: false }) inputViewChild: ElementRef;\r\n    \r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n    \r\n    public itemTemplate: TemplateRef<any>;\r\n        \r\n    value: any;\r\n    \r\n    onModelChange: Function = () => {};\r\n    \r\n    onModelTouched: Function = () => {};\r\n        \r\n    valueChanged: boolean;\r\n    \r\n    focus: boolean;\r\n            \r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'item':\r\n                    this.itemTemplate = item.template;\r\n                break;\r\n                \r\n                default:\r\n                    this.itemTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n    \r\n    onClick(event) {\r\n        this.inputViewChild.nativeElement.focus();\r\n    }\r\n\r\n    onItemClick(event: Event, item: any) {\r\n        this.onChipClick.emit({\r\n            originalEvent: event,\r\n            value: item\r\n        });\r\n    }\r\n\r\n    writeValue(value: any) : void {\r\n        this.value = value;\r\n        this.updateMaxedOut();\r\n    }\r\n    \r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n    }\r\n    \r\n    resolveFieldData(data: any, field: string): any {\r\n        if(data && field) {\r\n            if(field.indexOf('.') == -1) {\r\n                return data[field];\r\n            }\r\n            else {\r\n                let fields: string[] = field.split('.');\r\n                let value = data;\r\n                for(var i = 0, len = fields.length; i < len; ++i) {\r\n                    value = value[fields[i]];\r\n                }\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    \r\n    onInputFocus(event: FocusEvent) {\r\n        this.focus = true;\r\n        this.onFocus.emit(event);\r\n    }\r\n\r\n    onInputBlur(event: FocusEvent) {\r\n        this.focus = false;\r\n        if(this.addOnBlur && this.inputViewChild.nativeElement.value) {\r\n            this.addItem(event, this.inputViewChild.nativeElement.value);\r\n            this.inputViewChild.nativeElement.value = '';\r\n        }\r\n        this.onModelTouched();\r\n        this.onBlur.emit(event);\r\n    }\r\n    \r\n    removeItem(event: Event, index: number): void {\r\n        if(this.disabled) {\r\n            return;\r\n        }\r\n        \r\n        let removedItem = this.value[index];\r\n        this.value = this.value.filter((val, i) => i!=index);\r\n        this.onModelChange(this.value);\r\n        this.onRemove.emit({\r\n            originalEvent: event,\r\n            value: removedItem\r\n        });\r\n        this.updateMaxedOut();\r\n    }\r\n    \r\n    addItem(event: Event, item: string): void {\r\n        this.value = this.value||[];\r\n        if(item && item.trim().length) {\r\n            if(this.allowDuplicate || this.value.indexOf(item) === -1) {\r\n                this.value = [...this.value, item];\r\n                this.onModelChange(this.value);\r\n                this.onAdd.emit({\r\n                    originalEvent: event,\r\n                    value: item\r\n                });\r\n            }\r\n        }\r\n        this.updateMaxedOut();\r\n    }\r\n    \r\n    onKeydown(event: KeyboardEvent): void {\r\n        switch(event.which) {\r\n            //backspace\r\n            case 8:\r\n                if(this.inputViewChild.nativeElement.value.length === 0 && this.value && this.value.length > 0) {\r\n                    this.value = [...this.value];\r\n                    let removedItem = this.value.pop();\r\n                    this.onModelChange(this.value);\r\n                    this.onRemove.emit({\r\n                        originalEvent: event,\r\n                        value: removedItem\r\n                    });\r\n                }\r\n            break;\r\n            \r\n            //enter\r\n            case 13:\r\n                this.addItem(event, this.inputViewChild.nativeElement.value);\r\n                this.inputViewChild.nativeElement.value = '';\r\n                \r\n                event.preventDefault();\r\n            break;\r\n            \r\n            case 9:\r\n                if(this.addOnTab && this.inputViewChild.nativeElement.value !== '') {\r\n                    this.addItem(event, this.inputViewChild.nativeElement.value);\r\n                    this.inputViewChild.nativeElement.value = '';\r\n\r\n                    event.preventDefault();\r\n                }\r\n            break;\r\n            \r\n            default:\r\n                if(this.max && this.value && this.max === this.value.length) {\r\n                    event.preventDefault();\r\n                }\r\n            break;\r\n        }\r\n    }\r\n    \r\n    updateMaxedOut() {\r\n        if(this.inputViewChild && this.inputViewChild.nativeElement) {\r\n            if(this.max && this.value && this.max === this.value.length)\r\n                this.inputViewChild.nativeElement.disabled = true;\r\n            else\r\n                this.inputViewChild.nativeElement.disabled = this.disabled || false;\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,InputTextModule,SharedModule],\r\n    exports: [Chips,InputTextModule,SharedModule],\r\n    declarations: [Chips]\r\n})\r\nexport class ChipsModule { }\r\n","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {ChipsDemo} from './chipsdemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: ChipsDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class ChipsDemoRoutingModule {}\r\n","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule}    from '@angular/forms';\r\nimport {ChipsDemo} from './chipsdemo';\r\nimport {ChipsDemoRoutingModule} from './chipsdemo-routing.module';\r\nimport {ChipsModule} from '../../../components/chips/chips';\r\nimport {ButtonModule} from '../../../components/button/button';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n        FormsModule,\r\n\t\tChipsDemoRoutingModule,\r\n        ChipsModule,\r\n        ButtonModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tChipsDemo\r\n\t]\r\n})\r\nexport class ChipsDemoModule {}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './chipsdemo.html'\r\n})\r\nexport class ChipsDemo {\r\n\r\n    values1: string[];\r\n    \r\n    values2: string[];\r\n}"],"sourceRoot":""}