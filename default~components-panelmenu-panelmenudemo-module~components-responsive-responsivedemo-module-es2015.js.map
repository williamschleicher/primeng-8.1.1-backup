{"version":3,"sources":["webpack:///./src/app/components/panelmenu/panelmenu.ts"],"names":[],"mappings":"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","file":"default~components-panelmenu-panelmenudemo-module~components-responsive-responsivedemo-module-es2015.js","sourcesContent":["import {NgModule,Component,Input,ChangeDetectorRef} from '@angular/core';\r\nimport {trigger,state,style,transition,animate} from '@angular/animations';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MenuItem} from '../common/menuitem';\r\nimport {RouterModule} from '@angular/router';\r\n\r\nexport class BasePanelMenuItem {\r\n\r\n    constructor(private ref: ChangeDetectorRef) {}\r\n        \r\n    handleClick(event, item) {\r\n        if(item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        \r\n        item.expanded = !item.expanded;\r\n        this.ref.detectChanges();\r\n        \r\n        if(!item.url) {\r\n            event.preventDefault();\r\n        }\r\n                   \r\n        if(item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-panelMenuSub',\r\n    template: `\r\n        <ul class=\"ui-submenu-list\" [@submenu]=\"expanded ? {value: 'visible', params: {transitionParams: transitionOptions, height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\">\r\n            <ng-template ngFor let-child [ngForOf]=\"item.items\">\r\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\">\r\n                <li *ngIf=\"!child.separator\" class=\"ui-menuitem ui-corner-all\" [ngClass]=\"child.styleClass\" [class.ui-helper-hidden]=\"child.visible === false\" [ngStyle]=\"child.style\">\r\n                    <a *ngIf=\"!child.routerLink\" [href]=\"child.url||'#'\" class=\"ui-menuitem-link ui-corner-all\" [attr.tabindex]=\"item.expanded ? null : child.tabindex ? child.tabindex : '-1'\" [attr.id]=\"child.id\"\r\n                        [ngClass]=\"{'ui-state-disabled':child.disabled, 'ui-state-active': child.expanded}\" \r\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\">\r\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\r\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\r\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\r\n                    </a>\r\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-state-active'\" [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" class=\"ui-menuitem-link ui-corner-all\" \r\n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" [attr.tabindex]=\"item.expanded ? null : child.tabindex ? child.tabindex : '-1'\" [attr.id]=\"child.id\"\r\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\">\r\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\r\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\r\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\r\n                    </a>\r\n                    <p-panelMenuSub [item]=\"child\" [expanded]=\"child.expanded\" [transitionOptions]=\"transitionOptions\" *ngIf=\"child.items\"></p-panelMenuSub>\r\n                </li>\r\n            </ng-template>\r\n        </ul>\r\n    `,\r\n    animations: [\r\n        trigger('submenu', [\r\n            state('hidden', style({\r\n                height: '0px'\r\n            })),\r\n            state('void', style({\r\n                height: '{{height}}'\r\n            }), {params: {height: '0'}}),\r\n            state('visible', style({\r\n                height: '*'\r\n            })),\r\n            transition('visible => hidden', animate('{{transitionParams}}')),\r\n            transition('hidden => visible', animate('{{transitionParams}}')),\r\n            transition('void => hidden', animate('{{transitionParams}}')),\r\n            transition('void => visible', animate('{{transitionParams}}'))\r\n        ])\r\n    ]\r\n})\r\nexport class PanelMenuSub extends BasePanelMenuItem {\r\n    \r\n    @Input() item: MenuItem;\r\n    \r\n    @Input() expanded: boolean;\r\n\r\n    @Input() transitionOptions: string;\r\n\r\n    constructor(ref: ChangeDetectorRef) {\r\n        super(ref);\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-panelMenu',\r\n    template: `\r\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'ui-panelmenu ui-widget'\">\r\n            <ng-container *ngFor=\"let item of model;let f=first;let l=last;\">\r\n                <div class=\"ui-panelmenu-panel\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\">\r\n                    <div [ngClass]=\"{'ui-widget ui-panelmenu-header ui-state-default':true,'ui-corner-top':f,'ui-corner-bottom':l&&!item.expanded,\r\n                    'ui-state-active':item.expanded,'ui-state-disabled':item.disabled}\" [class]=\"item.styleClass\" [ngStyle]=\"item.style\">\r\n                        <a *ngIf=\"!item.routerLink\" [href]=\"item.url||'#'\" (click)=\"handleClick($event,item)\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\r\n                           [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\">\r\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\r\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\r\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\r\n                        </a>\r\n                        <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'ui-state-active'\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\r\n                           (click)=\"handleClick($event,item)\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\">\r\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\r\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\r\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\r\n                        </a>\r\n                    </div>\r\n                    <div *ngIf=\"item.items\" class=\"ui-panelmenu-content-wrapper\" [@rootItem]=\"item.expanded ? {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\"  (@rootItem.done)=\"onToggleDone()\"\r\n                         [ngClass]=\"{'ui-panelmenu-content-wrapper-overflown': !item.expanded||animating}\">\r\n                        <div class=\"ui-panelmenu-content ui-widget-content\">\r\n                            <p-panelMenuSub [item]=\"item\" [expanded]=\"true\" [transitionOptions]=\"transitionOptions\" class=\"ui-panelmenu-root-submenu\"></p-panelMenuSub>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    `,\r\n    animations: [\r\n        trigger('rootItem', [\r\n            state('hidden', style({\r\n                height: '0px'\r\n            })),\r\n            state('void', style({\r\n                height: '{{height}}'\r\n            }), {params: {height: '0'}}),\r\n            state('visible', style({\r\n                height: '*'\r\n            })),\r\n            transition('visible => hidden', animate('{{transitionParams}}')),\r\n            transition('hidden => visible', animate('{{transitionParams}}')),\r\n            transition('void => hidden', animate('{{transitionParams}}')),\r\n            transition('void => visible', animate('{{transitionParams}}'))\r\n        ])\r\n    ]\r\n})\r\nexport class PanelMenu extends BasePanelMenuItem {\r\n    \r\n    @Input() model: MenuItem[];\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() multiple: boolean = true;\r\n\r\n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\r\n    \r\n    public animating: boolean;\r\n\r\n    constructor(ref: ChangeDetectorRef) {\r\n        super(ref);\r\n    }\r\n                \r\n    collapseAll() {\r\n    \tfor(let item of this.model) {\r\n    \t\tif(item.expanded) {\r\n    \t\t\titem.expanded = false;\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\n    handleClick(event, item) {\r\n    \tif(!this.multiple) {\r\n            for(let modelItem of this.model) {\r\n        \t\tif(item !== modelItem && modelItem.expanded) {\r\n        \t\t\tmodelItem.expanded = false;\r\n        \t\t}\r\n        \t}\r\n    \t}\r\n        \r\n        this.animating = true;\r\n        super.handleClick(event, item);\r\n    }\r\n    \r\n    onToggleDone() {\r\n        this.animating = false;\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,RouterModule],\r\n    exports: [PanelMenu,RouterModule],\r\n    declarations: [PanelMenu,PanelMenuSub]\r\n})\r\nexport class PanelMenuModule { }\r\n"],"sourceRoot":""}