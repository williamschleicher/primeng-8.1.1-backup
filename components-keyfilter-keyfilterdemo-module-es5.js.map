{"version":3,"sources":["webpack:///./src/app/showcase/components/keyfilter/keyfilterdemo.html","webpack:///./src/app/components/keyfilter/keyfilter.ts","webpack:///./src/app/showcase/components/keyfilter/keyfilterdemo-routing.module.ts","webpack:///./src/app/showcase/components/keyfilter/keyfilterdemo.module.ts","webpack:///./src/app/showcase/components/keyfilter/keyfilterdemo.ts"],"names":[],"mappings":"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","file":"components-keyfilter-keyfilterdemo-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">KeyFilter</span>\\r\\n        <span>KeyFilter directive restricts user input based on a regular expression.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <h3>Filtering</h3>\\r\\n    <div class=\\\"ui-g ui-fluid\\\">\\r\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"int\\\" placeholder=\\\"Integers\\\">\\r\\n        </div>\\r\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"num\\\" placeholder=\\\"Numbers\\\">\\r\\n        </div>\\r\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"money\\\" placeholder=\\\"Money\\\">\\r\\n        </div>\\r\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"hex\\\" placeholder=\\\"Hex\\\">\\r\\n        </div>\\r\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"alpha\\\" placeholder=\\\"Alphabetic\\\">\\r\\n        </div>\\r\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n            <input type=\\\"text\\\" pInputText pKeyFilter=\\\"alphanum\\\" placeholder=\\\"Alphanumeric\\\">\\r\\n        </div>\\r\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n            <input type=\\\"text\\\" pInputText [pKeyFilter]=\\\"blockSpecial\\\" placeholder=\\\"Block # < > * !\\\">\\r\\n        </div>\\r\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\r\\n            <input type=\\\"text\\\" pInputText [pKeyFilter]=\\\"blockSpace\\\" placeholder=\\\"Block space key\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <h3>Validation Mode</h3>\\r\\n    <form #form=\\\"ngForm\\\">\\r\\n        <label for=\\\"cc\\\" style=\\\"display:block;margin-bottom:4px\\\">Credit Card</label>\\r\\n        <input id=\\\"cc\\\" type=\\\"text\\\" name=\\\"cc\\\" [(ngModel)]=\\\"cc\\\" pInputText [pKeyFilter]=\\\"ccRegex\\\" [pValidateOnly]=\\\"true\\\" placeholder=\\\"1234-1234-1234-1234\\\" style=\\\"margin-right: .5em\\\">\\r\\n        <p-message severity=\\\"error\\\" text=\\\"Not a valid number\\\" [@errorState]=\\\"form.dirty && !form.valid ? 'visible' : 'hidden'\\\"></p-message>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n                    <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;KeyFilterModule&#125; from 'primeng/keyfilter';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>KeyFilter directive is applied to an input text element using pKeyFilter attribute whose value is either a built-in regular expression name or a custom one.\\r\\n                Following input only accepts integers.</p>\\r\\n            \\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;input type=\\\"text\\\" pKeyFilter=\\\"int\\\"&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Built-in Filters</h3>\\r\\n            <p>Commonly used cases have their own built-in shortcuts.</p>\\r\\n            <ul>\\r\\n                <li>pint: Positive integers</li>\\r\\n                <li>int: Integers</li>\\r\\n                <li>pnum: Positive numbers</li>\\r\\n                <li>num: Numbers</li>\\r\\n                <li>hex: Hexadecimal</li>\\r\\n                <li>email: Email</li>\\r\\n                <li>alpha: Alphabetic</li>\\r\\n                <li>alphanum: Alphanumeric</li>\\r\\n            </ul>\\r\\n\\r\\n            <h3>Custom Filter</h3>\\r\\n            <p>A custom filter is provided by binding a regular expression, here is an example that blocks special characters including \\\"< > * !\\\"</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;input type=\\\"text\\\" [pKeyFilter]=\\\"noSpecial\\\"&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class KeyFilterDemo &#123;\\r\\n\\r\\n     noSpecial: RegExp = /^[^&lt;&gt;*!]+$/\\r\\n\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Validate Mode</h3>\\r\\n            <p>Instead of blocking a single keypress, the alternative validation mode which is enabled with pValidateOnly property validates the whole input\\r\\n                with a built-in Angular validator.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;form #form=\\\"ngForm\\\"&gt; \\r\\n    &lt;label for=\\\"cc\\\"&gt;Credit Card&lt;/label&gt; \\r\\n    &lt;input id=\\\"cc\\\" type=\\\"text\\\" name=\\\"cc\\\" [(ngModel)]=\\\"cc\\\" pInputText [pKeyFilter]=\\\"ccRegex\\\" [pValidateOnly]=\\\"true\\\" placeholder=\\\"1234-1234-1234-1234\\\"&gt;\\r\\n    &lt;p-message severity=\\\"error\\\" text=\\\"Not a valid number\\\" [@errorState]=\\\"form.dirty && !form.valid ? 'visible' : 'hidden'\\\"&gt;&lt;/p-message&gt;\\r\\n&lt;/form&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>pValidateOnly</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When enabled, instead of blocking keys, input is validated internally to test against the regular expression.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>This directive does not apply any styling.</p>\\r\\n            \\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n        \\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/keyfilter\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;h3&gt;Filtering&lt;/h3&gt;\\r\\n&lt;div class=\\\"ui-g ui-fluid\\\"&gt;\\r\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\r\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"int\\\" placeholder=\\\"Integers\\\"&gt;\\r\\n    &lt;/div&gt;\\r\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\r\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"num\\\" placeholder=\\\"Numbers\\\"&gt;\\r\\n    &lt;/div&gt;\\r\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\r\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"money\\\" placeholder=\\\"Money\\\"&gt;\\r\\n    &lt;/div&gt;\\r\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\r\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"hex\\\" placeholder=\\\"Hex\\\"&gt;\\r\\n    &lt;/div&gt;\\r\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\r\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"alpha\\\" placeholder=\\\"Alphabetic\\\"&gt;\\r\\n    &lt;/div&gt;\\r\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\r\\n        &lt;input type=\\\"text\\\" pInputText pKeyFilter=\\\"alphanum\\\" placeholder=\\\"Alphanumberic\\\"&gt;\\r\\n    &lt;/div&gt;\\r\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\r\\n        &lt;input type=\\\"text\\\" pInputText [pKeyFilter]=\\\"blockSpecial\\\" placeholder=\\\"Block # &lt; &gt; * !\\\"&gt;\\r\\n    &lt;/div&gt;\\r\\n    &lt;div class=\\\"ui-g-12 ui-md-4\\\"&gt;\\r\\n        &lt;input type=\\\"text\\\" pInputText [pKeyFilter]=\\\"blockSpace\\\" placeholder=\\\"Block space key\\\"&gt;\\r\\n    &lt;/div&gt;\\r\\n&lt;/div&gt;\\r\\n\\r\\n&lt;h3&gt;Validation Mode&lt;/h3&gt;\\r\\n&lt;form #form=\\\"ngForm\\\"&gt;\\r\\n    &lt;label for=\\\"cc\\\" style=\\\"display:block;margin-bottom:4px\\\"&gt;Credit Card&lt;/label&gt;\\r\\n    &lt;input id=\\\"cc\\\" type=\\\"text\\\" name=\\\"cc\\\" [(ngModel)]=\\\"cc\\\" pInputText [pKeyFilter]=\\\"ccRegex\\\" [pValidateOnly]=\\\"true\\\" placeholder=\\\"1234-1234-1234-1234\\\" style=\\\"margin-right: .5em\\\"&gt;\\r\\n    &lt;p-message severity=\\\"error\\\" text=\\\"Not a valid number\\\" [@errorState]=\\\"form.dirty && !form.valid ? 'visible' : 'hidden'\\\"&gt;&lt;/p-message&gt;\\r\\n&lt;/form&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class KeyFilterDemo &#123;\\r\\n\\r\\n    blockSpecial: RegExp = /^[^&lt;&gt;*!]+$/ \\r\\n    \\r\\n    blockSpace: RegExp = /[^\\\\s]/; \\r\\n    \\r\\n    ccRegex: RegExp = /[0-9]&#123;4&#125;-[0-9]&#123;4&#125;-[0-9]&#123;4&#125;-[0-9]&#123;4&#125;$/; \\r\\n    \\r\\n    cc: string; \\r\\n    \\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n        </p-tabPanel>\\r\\n     </p-tabView >\\r\\n</div>\\r\\n\"","import { NgModule, Directive, ElementRef, HostBinding, HostListener, Input, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DomHandler } from '../dom/domhandler';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\nexport const KEYFILTER_VALIDATOR: any = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => KeyFilter),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: '[pKeyFilter]',\r\n    providers: [KEYFILTER_VALIDATOR]\r\n})\r\nexport class KeyFilter implements Validator {\r\n\r\n    static DEFAULT_MASKS = {\r\n        pint: /[\\d]/,\r\n        'int': /[\\d\\-]/,\r\n        pnum: /[\\d\\.]/,\r\n        money: /[\\d\\.\\s,]/,\r\n        num: /[\\d\\-\\.]/,\r\n        hex: /[0-9a-f]/i,\r\n        email: /[a-z0-9_\\.\\-@]/i,\r\n        alpha: /[a-z_]/i,\r\n        alphanum: /[a-z0-9_]/i\r\n    };\r\n\r\n    static KEYS = {\r\n        TAB: 9,\r\n        RETURN: 13,\r\n        ESC: 27,\r\n        BACKSPACE: 8,\r\n        DELETE: 46\r\n    };\r\n\r\n    static SAFARI_KEYS = {\r\n        63234: 37, // left\r\n        63235: 39, // right\r\n        63232: 38, // up\r\n        63233: 40, // down\r\n        63276: 33, // page up\r\n        63277: 34, // page down\r\n        63272: 46, // delete\r\n        63273: 36, // home\r\n        63275: 35  // end\r\n    };\r\n\r\n    @Input() pValidateOnly: boolean;\r\n\r\n    @Output() ngModelChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    regex: RegExp;\r\n\r\n    _pattern: any;\r\n\r\n    isAndroid: boolean;\r\n\r\n    lastValue: any;\r\n\r\n    constructor(public el: ElementRef) { \r\n        this.isAndroid = DomHandler.isAndroid();\r\n    }\r\n\r\n    get pattern(): any {\r\n        return this._pattern;\r\n    }\r\n\r\n    @Input('pKeyFilter') set pattern(_pattern: any) {\r\n        this._pattern = _pattern;\r\n        this.regex = KeyFilter.DEFAULT_MASKS[this._pattern] || this._pattern;\r\n    }\r\n\r\n    isNavKeyPress(e: KeyboardEvent) {\r\n        let k = e.keyCode;\r\n        k = DomHandler.getBrowser().safari ? (KeyFilter.SAFARI_KEYS[k] || k) : k;\r\n\r\n        return (k >= 33 && k <= 40) || k == KeyFilter.KEYS.RETURN || k == KeyFilter.KEYS.TAB || k == KeyFilter.KEYS.ESC;\r\n    };\r\n\r\n    isSpecialKey(e: KeyboardEvent) {\r\n        let k = e.keyCode;\r\n        let c = e.charCode;\r\n\r\n        return k == 9 || k == 13 || k == 27 || k == 16 || k == 17 ||(k >= 18 && k <= 20) ||\r\n            (DomHandler.getBrowser().opera && !e.shiftKey && (k == 8 || (k >= 33 && k <= 35) || (k >= 36 && k <= 39) || (k >= 44 && k <= 45)));\r\n    }\r\n\r\n\r\n    getKey(e: KeyboardEvent) {\r\n        let k = e.keyCode || e.charCode;\r\n        return DomHandler.getBrowser().safari ? (KeyFilter.SAFARI_KEYS[k] || k) : k;\r\n    }\r\n\r\n    getCharCode(e: KeyboardEvent) {\r\n        return e.charCode || e.keyCode || e.which;\r\n    }\r\n\r\n    findDelta(value: string, prevValue: string) { \r\n        let delta = '';\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            let str = value.substr(0, i) + value.substr(i + value.length - prevValue.length);\r\n\r\n            if (str === prevValue) \r\n                delta = value.substr(i, value.length - prevValue.length);\r\n        }\r\n\r\n        return delta;\r\n    }\r\n\r\n    isValidChar(c: string) {\r\n        return this.regex.test(c);\r\n    }\r\n\r\n    isValidString(str: string) {\r\n        for (let i = 0; i < str.length; i++) {\r\n            if (!this.isValidChar(str.substr(i, 1))) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    @HostListener('input', ['$event'])\r\n    onInput(e: KeyboardEvent) { \r\n        if (this.isAndroid && !this.pValidateOnly) {\r\n            let val = this.el.nativeElement.value;\r\n            let lastVal = this.lastValue || '';\r\n\r\n            let inserted = this.findDelta(val, lastVal);\r\n            let removed = this.findDelta(lastVal, val);\r\n            let pasted = inserted.length > 1 || (!inserted && !removed);\r\n\r\n            if (pasted) {\r\n                if (!this.isValidString(val)) {\r\n                    this.el.nativeElement.value = lastVal;\r\n                    this.ngModelChange.emit(lastVal);\r\n                }\r\n            } \r\n            else if (!removed) {\r\n                if (!this.isValidChar(inserted)) {\r\n                    this.el.nativeElement.value = lastVal;\r\n                    this.ngModelChange.emit(lastVal);\r\n                }\r\n            }\r\n\r\n            val = this.el.nativeElement.value;\r\n            if (this.isValidString(val)) {\r\n                this.lastValue = val;\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('keypress', ['$event'])\r\n    onKeyPress(e: KeyboardEvent) {\r\n        if (this.isAndroid || this.pValidateOnly) {\r\n            return;\r\n        }\r\n        \r\n        let browser = DomHandler.getBrowser();\r\n\r\n        if (e.ctrlKey || e.altKey) {\r\n            return;\r\n        }\r\n\r\n        let k = this.getKey(e);\r\n        \r\n        if (k == 13) {\r\n            return;\r\n        }\r\n\r\n        if (browser.mozilla && (this.isNavKeyPress(e) || k == KeyFilter.KEYS.BACKSPACE || (k == KeyFilter.KEYS.DELETE && e.charCode == 0))) {\r\n            return;\r\n        }\r\n\r\n        let c = this.getCharCode(e);\r\n        let cc = String.fromCharCode(c);\r\n        let ok = true;\r\n\r\n        if (browser.mozilla && (this.isSpecialKey(e) || !cc)) {\r\n            return;\r\n        }\r\n\r\n        ok = this.regex.test(cc);\r\n\r\n        if (!ok) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    @HostListener('paste', ['$event'])\r\n    onPaste(e) {\r\n        const clipboardData = e.clipboardData || (<any>window).clipboardData.getData('text');\r\n        if (clipboardData) {\r\n            const pastedText = clipboardData.getData('text');\r\n            if (!this.regex.test(pastedText)) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    validate(c: AbstractControl): { [key: string]: any } {\r\n        if(this.pValidateOnly) {\r\n            let value = this.el.nativeElement.value;\r\n            if (value && !this.regex.test(value)) {\r\n                return {\r\n                    validatePattern: false\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [KeyFilter],\r\n    declarations: [KeyFilter]\r\n})\r\nexport class KeyFilterModule { }\r\n","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {KeyFilterDemo} from './keyfilterdemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{ path: '', component: KeyFilterDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class KeyFilterDemoRoutingModule {}\r\n","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {KeyFilterDemo} from './keyfilterdemo';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MessageModule} from '../../../components/message/message';\r\nimport {KeyFilterDemoRoutingModule} from './keyfilterdemo-routing.module';\r\nimport {KeyFilterModule} from '../../../components/keyfilter/keyfilter';\r\nimport {InputTextModule} from '../../../components/inputtext/inputtext';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tKeyFilterDemoRoutingModule,\r\n\t\tKeyFilterModule,\r\n\t\tInputTextModule,\r\n\t\tMessageModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tKeyFilterDemo\r\n\t]\r\n})\r\nexport class KeyFilterDemoModule {}\r\n","import {Component} from '@angular/core';\r\nimport {trigger,state,style,transition,animate} from '@angular/animations';\r\n\r\n@Component({\r\n    templateUrl: './keyfilterdemo.html',\r\n    animations: [\r\n        trigger('errorState', [\r\n            state('hidden', style({\r\n                opacity: 0\r\n            })),\r\n            state('visible', style({\r\n                opacity: 1\r\n            })),\r\n            transition('visible => hidden', animate('400ms ease-in')),\r\n            transition('hidden => visible', animate('400ms ease-out'))\r\n        ])\r\n    ],\r\n})\r\nexport class KeyFilterDemo {\r\n\r\n    blockSpecial: RegExp = /^[^<>*#!]+$/\r\n    \r\n    blockSpace: RegExp = /[^\\s]/;\r\n\r\n    ccRegex: RegExp = /[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}$/;\r\n\r\n    cc: string;\r\n\r\n}\r\n"],"sourceRoot":""}