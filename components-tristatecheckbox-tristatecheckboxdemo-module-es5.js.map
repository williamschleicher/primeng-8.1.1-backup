{"version":3,"sources":["webpack:///./src/app/showcase/components/tristatecheckbox/tristatecheckboxdemo.html","webpack:///./src/app/components/tristatecheckbox/tristatecheckbox.ts","webpack:///./src/app/showcase/components/tristatecheckbox/tristatecheckboxdemo-routing.module.ts","webpack:///./src/app/showcase/components/tristatecheckbox/tristatecheckboxdemo.module.ts","webpack:///./src/app/showcase/components/tristatecheckbox/tristatecheckboxdemo.ts"],"names":[],"mappings":"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","file":"components-tristatecheckbox-tristatecheckboxdemo-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">TriStateCheckbox</span>\\r\\n        <span>TriStateCheckbox is used to select either \\\"true\\\", \\\"false\\\" or \\\"null\\\" as the value.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <h3 class=\\\"first\\\">Value: {{value}}</h3>\\r\\n    <p-triStateCheckbox [(ngModel)]=\\\"value\\\" label=\\\"Status\\\"></p-triStateCheckbox>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;TriStateCheckboxModule&#125; from 'primeng/tristatecheckbox';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>TriStateCheckbox is defined using p-triStateCheckbox element and requires a value binding via ngModel.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-triStateCheckbox [(ngModel)]=\\\"value\\\" label=\\\"Item Label\\\"&gt;&lt;/p-triStateCheckbox&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class ModelComponent &#123;\\r\\n\\r\\n    value: any;\\r\\n\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Model Driven Forms</h3>\\r\\n            <p>TriStateCheckbox can be used in a model driven form as well.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-triStateCheckbox formControlName=\\\"property\\\"&gt;&lt;/p-triStateCheckbox&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>name</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Name of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>label</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Label of the checkbox.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>disabled</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When present, it specifies that the element should be disabled.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>tabindex</td>\\r\\n                            <td>number</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Index of the element in tabbing order.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>inputId</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Identifier of the focus input to match a label defined for the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>object</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>readonly</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When present, it specifies that the component cannot be edited.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>onChange</td>\\r\\n                            <td>event.originalEvent: Original browser event <br />\\r\\n                                event.value: Current value.</td>\\r\\n                            <td>Callback to invoke on value change.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-chkbox</td>\\r\\n                            <td>Container element</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-tristatechkbox</td>\\r\\n                            <td>Container element</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-chkbox-box</td>\\r\\n                            <td>Container of icon.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-chkbox-icon</td>\\r\\n                            <td>Icon element.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/tristatecheckbox\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;h3 class=\\\"first\\\">Value: {{value}}&lt;/h3&gt;\\r\\n&lt;p-triStateCheckbox [(ngModel)]=\\\"value\\\" label=\\\"status\\\"&gt;&lt;/p-triStateCheckbox&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class TriStateCheckboxDemo &#123;\\r\\n\\r\\n    value: any;\\r\\n\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\\r\\n\"","import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const TRISTATECHECKBOX_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TriStateCheckbox),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-triStateCheckbox',\r\n    template: `\r\n        <div [ngStyle]=\"style\" [ngClass]=\"{'ui-chkbox ui-tristatechkbox ui-widget': true,'ui-chkbox-readonly': readonly}\" [class]=\"styleClass\">\r\n            <div class=\"ui-helper-hidden-accessible\">\r\n                <input #input type=\"text\" [attr.id]=\"inputId\" [name]=\"name\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" (keyup)=\"onKeyup($event)\" (keydown)=\"onKeydown($event)\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\r\n            </div>\r\n            <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" (click)=\"onClick($event,input)\"\r\n                [ngClass]=\"{'ui-state-active':value!=null,'ui-state-disabled':disabled,'ui-state-focus':focus}\">\r\n                <span class=\"ui-chkbox-icon pi ui-clickable\" [ngClass]=\"{'pi-check':value==true,'pi-times':value==false}\"></span>\r\n            </div>\r\n        </div>\r\n        <label class=\"ui-chkbox-label\" (click)=\"onClick($event,input)\"\r\n               [ngClass]=\"{'ui-label-active':value!=null, 'ui-label-disabled':disabled, 'ui-label-focus':focus}\"\r\n               *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\r\n    `,\r\n    providers: [TRISTATECHECKBOX_VALUE_ACCESSOR]\r\n})\r\nexport class TriStateCheckbox implements ControlValueAccessor  {\r\n\r\n    constructor(private cd: ChangeDetectorRef) {}\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() label: string;\r\n\r\n    @Input() readonly: boolean;\r\n\r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    focus: boolean;\r\n\r\n    value: any;\r\n\r\n    onModelChange: Function = () => {};\r\n\r\n    onModelTouched: Function = () => {};\r\n\r\n    onClick(event: Event, input: HTMLInputElement) {\r\n        if(!this.disabled && !this.readonly) {\r\n            this.toggle(event);\r\n            this.focus = true;\r\n            input.focus();\r\n        }\r\n    }\r\n\r\n    onKeydown(event: KeyboardEvent) {\r\n        if(event.keyCode == 32) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onKeyup(event: KeyboardEvent) {\r\n        if(event.keyCode == 32 && !this.readonly) {\r\n            this.toggle(event);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    toggle(event: Event) {\r\n        if(this.value == null || this.value == undefined)\r\n            this.value = true;\r\n        else if(this.value == true)\r\n            this.value = false;\r\n        else if(this.value == false)\r\n            this.value = null;\r\n\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({\r\n            originalEvent: event,\r\n            value: this.value\r\n        })\r\n    }\r\n\r\n    onFocus() {\r\n        this.focus = true;\r\n    }\r\n\r\n    onBlur() {\r\n        this.focus = false;\r\n        this.onModelTouched();\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    writeValue(value: any) : void {\r\n        this.value = value;\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    setDisabledState(disabled: boolean): void {\r\n        this.disabled = disabled;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [TriStateCheckbox],\r\n    declarations: [TriStateCheckbox]\r\n})\r\nexport class TriStateCheckboxModule { }\r\n","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {TriStateCheckboxDemo} from './tristatecheckboxdemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: TriStateCheckboxDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class TriStateCheckboxDemoRoutingModule {}\r\n","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule}    from '@angular/forms';\r\nimport {TriStateCheckboxDemo} from './tristatecheckboxdemo';\r\nimport {TriStateCheckboxDemoRoutingModule} from './tristatecheckboxdemo-routing.module';\r\nimport {TriStateCheckboxModule} from '../../../components/tristatecheckbox/tristatecheckbox';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n        FormsModule,\r\n\t\tTriStateCheckboxDemoRoutingModule,\r\n        TriStateCheckboxModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tTriStateCheckboxDemo\r\n\t]\r\n})\r\nexport class TriStateCheckboxDemoModule {}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './tristatecheckboxdemo.html',\r\n})\r\nexport class TriStateCheckboxDemo {\r\n\r\n    value: any;\r\n}"],"sourceRoot":""}