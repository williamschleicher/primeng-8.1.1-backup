{"version":3,"sources":["webpack:///./src/app/showcase/components/fileupload/fileuploaddemo.html","webpack:///./src/app/components/fileupload/fileupload.ts","webpack:///./src/app/showcase/components/fileupload/fileuploaddemo-routing.module.ts","webpack:///./src/app/showcase/components/fileupload/fileuploaddemo.module.ts","webpack:///./src/app/showcase/components/fileupload/fileuploaddemo.ts"],"names":[],"mappings":"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","file":"components-fileupload-fileuploaddemo-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">FileUpload</span>\\r\\n        <span>FileUpload is an advanced uploader with drag and drop support, multi file uploads, auto uploading, progress tracking and\\r\\n            validations.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <p-toast [style]=\\\"{marginTop: '80px'}\\\"></p-toast>\\r\\n\\r\\n    <h3 class=\\\"first\\\">Advanced</h3>\\r\\n    <p-fileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" (onUpload)=\\\"onUpload($event)\\\"\\r\\n            multiple=\\\"multiple\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\">\\r\\n            <ng-template pTemplate=\\\"content\\\">\\r\\n                <ul *ngIf=\\\"uploadedFiles.length\\\">\\r\\n                    <li *ngFor=\\\"let file of uploadedFiles\\\">{{file.name}} - {{file.size}} bytes</li>\\r\\n                </ul>\\r\\n            </ng-template>\\r\\n    </p-fileUpload>\\r\\n\\r\\n    <h3>Basic</h3>\\r\\n    <p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"></p-fileUpload>\\r\\n\\r\\n    <h3>Basic with Auto</h3>\\r\\n    <p-fileUpload #fubauto mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUploadAuto($event)\\\" [auto]=\\\"true\\\" chooseLabel=\\\"Browse\\\"></p-fileUpload>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;FileUploadModule&#125; from 'primeng/fileupload';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>FileUpload requires a url property as the upload target and a name to identify the files at backend.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Multiple Uploads</h3>\\r\\n            <p>Only one file can be selected at a time, to allow selecting multiples enable multiple option.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>DragDrop</h3>\\r\\n            <p>File selection can also be done by dragging and dropping one or more files to the content section of the component.</p>\\r\\n\\r\\n            <h3>Auto Uploads</h3>\\r\\n            <p>When auto property is enabled, upload begins as soon as file selection is completed or a file is dropped on the drop area.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\" [auto]=\\\"true\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>File Types</h3>\\r\\n            <p>Selectable file types can be restricted with accept property, example below only allows images to be uploaded.\\r\\n            Read more about other possible values <a href=\\\"http://www.w3schools.com/tags/att_input_accept.asp\\\">here</a>.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>File Size</h3>\\r\\n            <p>Maximum file size can be restricted using maxFileSize property defined in bytes.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <p>In order to customize the default messages use invalidFileSizeMessageSummary and invalidFileSizeMessageDetail options.\\r\\n            In summary &#123;0&#125; placeholder refers to the filename and in detail, file size.</p>\\r\\n            <ul>\\r\\n                <li>invalidFileSizeMessageSummary: '&#123;0&#125;: Invalid file size, '</li>\\r\\n                <li>invalidFileSizeMessageDetail: string = 'maximum upload size is &#123;0&#125;.'</li>\\r\\n            </ul>\\r\\n\\r\\n            <h3>Templating</h3>\\r\\n            <p>File list UI is customizable using a ng-template called \\\"file\\\" that gets the <a href=\\\"https://www.w3.org/TR/FileAPI/\\\">File</a> instance as the implicit variable.\\r\\n                Second ng-template named \\\"content\\\" can be used to place custom content inside the content section which would be useful to implement a user interface to manage the uploaded files such as removing them.\\r\\n                Third and final ng-template option is \\\"toolbar\\\" to display custom content at toolbar.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;\\r\\n        &lt;ng-template pTemplate=\\\"toolbar\\\"&gt;\\r\\n            &lt;div&gt;Upload 3 Files&lt;/div&gt;\\r\\n        &lt;/ng-template&gt;\\r\\n        &lt;ng-template let-file pTemplate=\\\"file\\\"&gt;\\r\\n            &lt;div&gt;Custom UI to display a file&lt;/div&gt;\\r\\n        &lt;/ng-template&gt;\\r\\n        &lt;ng-template pTemplate=\\\"content\\\"&gt;\\r\\n            &lt;div&gt;Custom UI to manage uploaded files&lt;/div&gt;\\r\\n        &lt;/ng-template&gt;\\r\\n&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Request Customization</h3>\\r\\n            <p>Internally, FileUpload uses Angular's HttpClient module so you may take advantage of the built-in features such interceptors and header customization.</p>\\r\\n\\r\\n            <h3>Basic UI</h3>\\r\\n            <p>FileUpload basic mode provides a simpler UI as an alternative to advanced mode.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\" [auto]=\\\"true\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n            <h3>Custom Upload</h3>\\r\\n            <p>Uploading implementation can be overridden by enabling customMode property and defining a custom upload handler event.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" customUpload=\\\"true\\\" (uploadHandler)=\\\"myUploader($event)\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nmyUploader(event) &#123;\\r\\n    //event.files == files to upload\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>name</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Name of the request parameter to identify the files at backend.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>url</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Remote url to upload the files.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>method</td>\\r\\n                            <td>string</td>\\r\\n                            <td>POST</td>\\r\\n                            <td>HTTP method to send the files to the url.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>multiple</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Used to select multiple files at once from file dialog.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>accept</td>\\r\\n                            <td>string</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Pattern to restrict the allowed file types such as \\\"image/*\\\".</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>disabled</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Disables the upload functionality.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>auto</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When enabled, upload begins automatically after selection is completed.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>maxFileSize</td>\\r\\n                            <td>number</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Maximum file size allowed in bytes.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>fileLimit</td>\\r\\n                            <td>number</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Maximum number of files that can be uploaded.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileSizeMessageSummary</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"&#123;0&#125;: Invalid file size, \\\"</td>\\r\\n                            <td>Summary message of the invalid file size.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileSizeMessageDetail</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"maximum upload size is &#123;0&#125;.\\\"</td>\\r\\n                            <td>Detail message of the invalid file size.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileTypeMessageSummary</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"&#123;0&#125;: Invalid file type, \\\"</td>\\r\\n                            <td>Summary message of the invalid file type.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileLimitMessageDetail</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"limit is &#123;0&#125; at most.\\\"</td>\\r\\n                            <td>Detail message of the invalid file type.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileLimitMessageSummary</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"Maximum number of files exceeded, \\\"</td>\\r\\n                            <td>Summary message of the invalid file type.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileTypeMessageDetail</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"allowed file types: &#123;0&#125;.\\\"</td>\\r\\n                            <td>Detail message of the invalid file type.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>previewWidth</td>\\r\\n                            <td>number</td>\\r\\n                            <td>50</td>\\r\\n                            <td>Width of the image thumbnail in pixels.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>chooseLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>Choose</td>\\r\\n                            <td>Label of the choose button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>uploadLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>Upload</td>\\r\\n                            <td>Label of the upload button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>cancelLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>Cancel</td>\\r\\n                            <td>Label of the cancel button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>withCredentials</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>mode</td>\\r\\n                            <td>string</td>\\r\\n                            <td>advanced</td>\\r\\n                            <td>Defines the UI of the component, possible values are \\\"advanced\\\" and \\\"basic\\\".</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>customUpload</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Whether to use the default upload or a manual implementation defined in uploadHandler callback.</td>\\r\\n                        </tr>\\r\\n                      <tr>\\r\\n                            <td>showUploadButton</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>true</td>\\r\\n                            <td>Defines the visibility of upload button for Client-side FileUpload.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>showCancelButton</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>true</td>\\r\\n                            <td>Defines the visibility of cancel button for Client-side FileUpload.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>files</td>\\r\\n                            <td>array</td>\\r\\n                            <td>null</td>\\r\\n                            <td>List of files to be provide to the FileUpload externally.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>headers</td>\\r\\n                            <td>HttpHeaders</td>\\r\\n                            <td>null</td>\\r\\n                            <td>HttpHeaders class represents the header configuration options for an HTTP request.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>onBeforeUpload</td>\\r\\n                            <td>event.formData: FormData object.</td>\\r\\n                            <td>Callback to invoke before file upload is initialized.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onSend</td>\\r\\n                            <td>event.originalEvent: Http Event <br>\\r\\n                                event.formData: FormData object.</td>\\r\\n                            <td>An event indicating that the request was sent to the server. Useful when a request may be retried multiple times, to distinguish between retries on the final event stream.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onUpload</td>\\r\\n                            <td>event.originalEvent: Http Event<br />\\r\\n                                event.files: Uploaded files.</td>\\r\\n                            <td>Callback to invoke when file upload is complete.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onError</td>\\r\\n                            <td>event.files: Files that are not uploaded.<br />\\r\\n                                event.error: Request Error.</td>\\r\\n                            <td>Callback to invoke if file upload fails.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onClear</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Callback to invoke when files in queue are removed without uploading using clear all button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onRemove</td>\\r\\n                            <td>event.originalEvent: Original browser event. <br />\\r\\n                                event.file: Selected file.</td>\\r\\n                            <td>Callback to invoke when a file is removed without uploading using clear button of a file.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onSelect</td>\\r\\n                            <td>event.originalEvent: Original browser event. <br />\\r\\n                                event.files: List of selected files.</td>\\r\\n                            <td>Callback to invoke when files are selected.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onProgress</td>\\r\\n                            <td>event.originalEvent: Original browser event. <br />\\r\\n                                event.progress: Calculated progress value.</td>\\r\\n                            <td>Callback to invoke when files are being uploaded.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>uploadHandler</td>\\r\\n                            <td>event.files: List of selected files.</td>\\r\\n                            <td>Callback to invoke in custom upload mode to upload the files manually.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Methods</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>upload</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Uploads the selected files.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>clear</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Clears the files list.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-fileupload</td>\\r\\n                            <td>Container element</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-fileupload-buttonbar</td>\\r\\n                            <td>Header containing the buttons</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-fileupload-content</td>\\r\\n                            <td>Content section</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/fileupload\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-toast [style]=\\\"&#123;marginTop: '80px'&#125;\\\"&gt;&lt;/p-toast&gt;\\r\\n\\r\\n&lt;h3 class=\\\"first\\\"&gt;Advanced&lt;/h3&gt;\\r\\n&lt;p-fileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" (onUpload)=\\\"onUpload($event)\\\"\\r\\n        multiple=\\\"multiple\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;\\r\\n    &lt;ng-template pTemplate=\\\"content\\\"&gt;\\r\\n        &lt;ul *ngIf=\\\"uploadedFiles.length\\\"&gt;\\r\\n            &lt;li *ngFor=\\\"let file of uploadedFiles\\\"&gt;&#123;&#123;file.name&#125;&#125; - &#123;&#123;file.size&#125;&#125; bytes&lt;/li&gt;\\r\\n        &lt;/ul&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n&lt;/p-fileUpload&gt;\\r\\n\\r\\n&lt;h3&gt;Basic&lt;/h3&gt;\\r\\n&lt;p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n\\r\\n&lt;h3&gt;Basic with Auto&lt;/h3&gt;\\r\\n&lt;p-fileUpload #fubauto mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUploadAuto($event)\\\" [auto]=\\\"true\\\" chooseLabel=\\\"Browse\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class FileUploadDemo &#123;\\r\\n\\r\\n    uploadedFiles: any[] = [];\\r\\n\\r\\n    constructor(private messageService: MessageService) &#123;&#125;\\r\\n\\r\\n    onUpload(event) &#123;\\r\\n        for(let file of event.files) &#123;\\r\\n            this.uploadedFiles.push(file);\\r\\n        &#125;\\r\\n\\r\\n        this.messageService.add(&#123;severity: 'info', summary: 'File Uploaded', detail: ''&#125;);\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\\r\\n\"","import {NgModule,Component,OnDestroy,Input,Output,EventEmitter,TemplateRef,AfterViewInit,AfterContentInit,\r\n            ContentChildren,QueryList,ViewChild,ElementRef,NgZone} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {ButtonModule} from '../button/button';\r\nimport {MessagesModule} from '../messages/messages';\r\nimport {ProgressBarModule} from '../progressbar/progressbar';\r\nimport {DomHandler} from '../dom/domhandler';\r\nimport {Message} from '../common/message';\r\nimport {PrimeTemplate,SharedModule} from '../common/shared';\r\nimport {BlockableUI} from '../common/blockableui';\r\nimport {HttpClient, HttpEvent, HttpEventType, HttpHeaders} from \"@angular/common/http\";\r\n\r\n@Component({\r\n    selector: 'p-fileUpload',\r\n    template: `\r\n        <div [ngClass]=\"'ui-fileupload ui-widget'\" [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"mode === 'advanced'\">\r\n            <div class=\"ui-fileupload-buttonbar ui-widget-header ui-corner-top\">\r\n                <span class=\"ui-fileupload-choose\" [label]=\"chooseLabel\" icon=\"pi pi-plus\" pButton [ngClass]=\"{'ui-state-focus': focus, 'ui-state-disabled':disabled || isChooseDisabled()}\"> \r\n                    <input #advancedfileinput type=\"file\" (change)=\"onFileSelect($event)\" [multiple]=\"multiple\" [accept]=\"accept\" [disabled]=\"disabled || isChooseDisabled()\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\r\n                </span>\r\n\r\n                <p-button *ngIf=\"!auto&&showUploadButton\" type=\"button\" [label]=\"uploadLabel\" icon=\"pi pi-upload\" (onClick)=\"upload()\" [disabled]=\"!hasFiles() || isFileLimitExceeded()\"></p-button>\r\n                <p-button *ngIf=\"!auto&&showCancelButton\" type=\"button\" [label]=\"cancelLabel\" icon=\"pi pi-times\" (onClick)=\"clear()\" [disabled]=\"!hasFiles() || uploading\"></p-button>\r\n\r\n                <ng-container *ngTemplateOutlet=\"toolbarTemplate\"></ng-container>\r\n            </div>\r\n            <div #content [ngClass]=\"{'ui-fileupload-content ui-widget-content ui-corner-bottom':true}\"\r\n                 (dragenter)=\"onDragEnter($event)\" (dragleave)=\"onDragLeave($event)\" (drop)=\"onDrop($event)\">\r\n                <p-progressBar [value]=\"progress\" [showValue]=\"false\" *ngIf=\"hasFiles()\"></p-progressBar>\r\n\r\n                <p-messages [value]=\"msgs\" [enableService]=\"false\"></p-messages>\r\n\r\n                <div class=\"ui-fileupload-files\" *ngIf=\"hasFiles()\">\r\n                    <div *ngIf=\"!fileTemplate\">\r\n                        <div class=\"ui-fileupload-row\" *ngFor=\"let file of files; let i = index;\">\r\n                            <div><img [src]=\"file.objectURL\" *ngIf=\"isImage(file)\" [width]=\"previewWidth\" /></div>\r\n                            <div>{{file.name}}</div>\r\n                            <div>{{formatSize(file.size)}}</div>\r\n                            <div>\r\n                                <button type=\"button\" icon=\"pi pi-times\" pButton (click)=\"remove($event,i)\" [disabled]=\"uploading\"></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"fileTemplate\">\r\n                        <ng-template ngFor [ngForOf]=\"files\" [ngForTemplate]=\"fileTemplate\"></ng-template>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\r\n            </div>\r\n        </div>\r\n        <span *ngIf=\"mode === 'basic'\" [ngClass]=\"{'ui-button ui-fileupload-choose ui-widget ui-state-default ui-corner-all ui-button-text-icon-left': true, \r\n                'ui-fileupload-choose-selected': hasFiles(),'ui-state-focus': focus, 'ui-state-disabled':disabled}\"\r\n              [ngStyle]=\"style\" [class]=\"styleClass\" (mouseup)=\"onSimpleUploaderClick($event)\">\r\n            <span class=\"ui-button-icon-left pi\" [ngClass]=\"{'pi-plus': !hasFiles()||auto, 'pi-upload': hasFiles()&&!auto}\"></span>\r\n            <span class=\"ui-button-text ui-clickable\">{{auto ? chooseLabel : hasFiles() ? files[0].name : chooseLabel}}</span>\r\n            <input #basicfileinput type=\"file\" [accept]=\"accept\" [multiple]=\"multiple\" [disabled]=\"disabled\"\r\n                   (change)=\"onFileSelect($event)\" *ngIf=\"!hasFiles()\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\r\n        </span>\r\n    `\r\n})\r\nexport class FileUpload implements AfterViewInit,AfterContentInit,OnDestroy,BlockableUI {\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() url: string;\r\n\r\n    @Input() method: string = 'POST';\r\n\r\n    @Input() multiple: boolean;\r\n\r\n    @Input() accept: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() auto: boolean;\r\n\r\n    @Input() withCredentials: boolean;\r\n\r\n    @Input() maxFileSize: number;\r\n\r\n    @Input() invalidFileSizeMessageSummary: string = '{0}: Invalid file size, ';\r\n\r\n    @Input() invalidFileSizeMessageDetail: string = 'maximum upload size is {0}.';\r\n\r\n    @Input() invalidFileTypeMessageSummary: string = '{0}: Invalid file type, ';\r\n\r\n    @Input() invalidFileTypeMessageDetail: string = 'allowed file types: {0}.';\r\n\r\n    @Input() invalidFileLimitMessageDetail: string = 'limit is {0} at most.';\r\n\r\n    @Input() invalidFileLimitMessageSummary: string = 'Maximum number of files exceeded, ';\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() previewWidth: number = 50;\r\n\r\n    @Input() chooseLabel: string = 'Choose';\r\n\r\n    @Input() uploadLabel: string = 'Upload';\r\n\r\n    @Input() cancelLabel: string = 'Cancel';\r\n\r\n    @Input() showUploadButton: boolean = true;\r\n\r\n    @Input() showCancelButton: boolean = true;\r\n\r\n    @Input() mode: string = 'advanced';\r\n\r\n    @Input() headers: HttpHeaders;\r\n    \r\n    @Input() customUpload: boolean;\r\n\r\n    @Input() fileLimit: number;\r\n\r\n    @Output() onBeforeUpload: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onSend: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onUpload: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onError: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onClear: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onRemove: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onProgress: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() uploadHandler: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    @ViewChild('advancedfileinput', { static: false }) advancedFileInput: ElementRef;\r\n\r\n    @ViewChild('basicfileinput', { static: false }) basicFileInput: ElementRef;\r\n\r\n    @ViewChild('content', { static: false }) content: ElementRef;\r\n\r\n    @Input() set files(files) {\r\n        this._files = [];\r\n\r\n        for(let i = 0; i < files.length; i++) {\r\n            let file = files[i];\r\n\r\n            if(this.validate(file)) {\r\n                if(this.isImage(file)) {\r\n                    (<any>file).objectURL = this.sanitizer.bypassSecurityTrustUrl((window.URL.createObjectURL(files[i])));\r\n                }\r\n\r\n                this._files.push(files[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    get files(): File[] {\r\n        return this._files;\r\n    }\r\n\r\n    public _files: File[] = [];\r\n\r\n    public progress: number = 0;\r\n\r\n    public dragHighlight: boolean;\r\n\r\n    public msgs: Message[];\r\n\r\n    public fileTemplate: TemplateRef<any>;\r\n\r\n    public contentTemplate: TemplateRef<any>;\r\n\r\n    public toolbarTemplate: TemplateRef<any>;\r\n\r\n    public uploadedFileCount: number = 0;\r\n\r\n    focus: boolean;\r\n\r\n    uploading: boolean;\r\n\r\n    duplicateIEEvent: boolean;  // flag to recognize duplicate onchange event for file input\r\n\r\n    constructor(private el: ElementRef, public sanitizer: DomSanitizer, public zone: NgZone, private http: HttpClient){}\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'file':\r\n                    this.fileTemplate = item.template;\r\n                break;\r\n\r\n                case 'content':\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n\r\n                case 'toolbar':\r\n                    this.toolbarTemplate = item.template;\r\n                break;\r\n\r\n                default:\r\n                    this.fileTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if(this.mode === 'advanced') {\r\n            this.zone.runOutsideAngular(() => {\r\n                if (this.content)\r\n                    this.content.nativeElement.addEventListener('dragover', this.onDragOver.bind(this));\r\n            });\r\n        }\r\n    }\r\n\r\n    onFileSelect(event) {\r\n        if(event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\r\n            this.duplicateIEEvent = false;\r\n            return;\r\n        }\r\n\r\n        this.msgs = [];\r\n        if(!this.multiple) {\r\n            this.files = [];\r\n        }\r\n\r\n        let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\r\n        for(let i = 0; i < files.length; i++) {\r\n            let file = files[i];\r\n\r\n            if(!this.isFileSelected(file)){\r\n              if(this.validate(file)) {\r\n                  if(this.isImage(file)) {\r\n                      file.objectURL = this.sanitizer.bypassSecurityTrustUrl((window.URL.createObjectURL(files[i])));\r\n                  }\r\n\r\n                  this.files.push(files[i]);\r\n              }\r\n            }\r\n        }\r\n\r\n        this.onSelect.emit({originalEvent: event, files: files});\r\n\r\n        if (this.fileLimit && this.mode == \"advanced\") {\r\n            this.checkFileLimit();\r\n        }\r\n\r\n        if(this.hasFiles() && this.auto && (!(this.mode === \"advanced\") || !this.isFileLimitExceeded())) {\r\n            this.upload();\r\n        }\r\n\r\n        if (event.type !== 'drop' && this.isIE11()) {\r\n          this.clearIEInput();\r\n        } else {\r\n          this.clearInputElement();\r\n        }\r\n    }\r\n\r\n    isFileSelected(file: File): boolean{\r\n        for(let sFile of this.files){\r\n            if((sFile.name + sFile.type + sFile.size) === (file.name + file.type+file.size)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isIE11() {\r\n        return !!window['MSInputMethodContext'] && !!document['documentMode'];\r\n    }\r\n\r\n    validate(file: File): boolean {\r\n        if(this.accept && !this.isFileTypeValid(file)) {\r\n            this.msgs.push({\r\n                severity: 'error',\r\n                summary: this.invalidFileTypeMessageSummary.replace('{0}', file.name),\r\n                detail: this.invalidFileTypeMessageDetail.replace('{0}', this.accept)\r\n            });\r\n            return false;\r\n        }\r\n\r\n        if(this.maxFileSize  && file.size > this.maxFileSize) {\r\n            this.msgs.push({\r\n                severity: 'error',\r\n                summary: this.invalidFileSizeMessageSummary.replace('{0}', file.name),\r\n                detail: this.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.maxFileSize))\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private isFileTypeValid(file: File): boolean {\r\n        let acceptableTypes = this.accept.split(',').map(type => type.trim());\r\n        for(let type of acceptableTypes) {\r\n            let acceptable = this.isWildcard(type) ? this.getTypeClass(file.type) === this.getTypeClass(type)\r\n                                                    : file.type == type || this.getFileExtension(file).toLowerCase() === type.toLowerCase();\r\n\r\n            if(acceptable) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getTypeClass(fileType: string): string {\r\n        return fileType.substring(0, fileType.indexOf('/'));\r\n    }\r\n\r\n    isWildcard(fileType: string): boolean {\r\n        return fileType.indexOf('*') !== -1;\r\n    }\r\n\r\n    getFileExtension(file: File): string {\r\n        return '.' + file.name.split('.').pop();\r\n    }\r\n\r\n    isImage(file: File): boolean {\r\n        return /^image\\//.test(file.type);\r\n    }\r\n\r\n    onImageLoad(img: any) {\r\n        window.URL.revokeObjectURL(img.src);\r\n    }\r\n\r\n    upload() {\r\n        if(this.customUpload) {\r\n            if (this.fileLimit) {\r\n                this.uploadedFileCount += this.files.length; \r\n            }\r\n            \r\n            this.uploadHandler.emit({\r\n                files: this.files\r\n            });\r\n        }\r\n        else {\r\n            this.uploading = true;\r\n            this.msgs = [];\r\n            let formData = new FormData();\r\n\r\n            this.onBeforeUpload.emit({\r\n                'formData': formData\r\n            });\r\n\r\n            for (let i = 0; i < this.files.length; i++) {\r\n                formData.append(this.name, this.files[i], this.files[i].name);\r\n            }\r\n\r\n            this.http.post(this.url, formData, {\r\n                headers: this.headers, reportProgress: true, observe: 'events', withCredentials: this.withCredentials\r\n            }).subscribe( (event: HttpEvent<any>) => {\r\n                    switch (event.type) {\r\n                        case HttpEventType.Sent:\r\n                            this.onSend.emit({\r\n                                originalEvent: event,\r\n                                'formData': formData\r\n                            });\r\n                            break;\r\n                        case HttpEventType.Response:\r\n                            this.uploading = false;\r\n                            this.progress = 0;\r\n\r\n                            if (event['status'] >= 200 && event['status'] < 300) {\r\n                                if (this.fileLimit) {\r\n                                    this.uploadedFileCount += this.files.length; \r\n                                }\r\n\r\n                                this.onUpload.emit({originalEvent: event, files: this.files});\r\n                            } else {\r\n                                this.onError.emit({files: this.files});\r\n                            }\r\n\r\n                            this.clear();\r\n                            break;\r\n                        case HttpEventType.UploadProgress: {\r\n                            if (event['loaded']) {\r\n                                this.progress = Math.round((event['loaded'] * 100) / event['total']);\r\n                            }\r\n\r\n                            this.onProgress.emit({originalEvent: event, progress: this.progress});\r\n                            break;\r\n                        }\r\n                    }\r\n                },\r\n                error => {\r\n                    this.uploading = false;\r\n                    this.onError.emit({files: this.files, error: error});\r\n                });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.files = [];\r\n        this.onClear.emit();\r\n        this.clearInputElement();\r\n    }\r\n\r\n    remove(event: Event, index: number) {\r\n        this.clearInputElement();\r\n        this.onRemove.emit({originalEvent: event, file: this.files[index]});\r\n        this.files.splice(index, 1);\r\n    }\r\n\r\n    isFileLimitExceeded() {\r\n        if (this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount && this.focus) {\r\n            this.focus = false;\r\n        }\r\n\r\n        return this.fileLimit && this.fileLimit < this.files.length + this.uploadedFileCount;\r\n    }\r\n\r\n    isChooseDisabled() {\r\n        return this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount;\r\n    }\r\n\r\n    checkFileLimit() {\r\n        if (this.isFileLimitExceeded()) {\r\n            this.msgs.push({\r\n                severity: 'error',\r\n                summary: this.invalidFileLimitMessageSummary.replace('{0}', this.fileLimit.toString()),\r\n                detail: this.invalidFileLimitMessageDetail.replace('{0}', this.fileLimit.toString())\r\n            });\r\n        }\r\n    }\r\n\r\n    clearInputElement() {\r\n        if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\r\n            this.advancedFileInput.nativeElement.value = '';\r\n        }\r\n\r\n        if (this.basicFileInput && this.basicFileInput.nativeElement) {\r\n            this.basicFileInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    clearIEInput() {\r\n        if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\r\n            this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\r\n            this.advancedFileInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    hasFiles(): boolean {\r\n        return this.files && this.files.length > 0;\r\n    }\r\n\r\n    onDragEnter(e) {\r\n        if(!this.disabled) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    onDragOver(e) {\r\n        if(!this.disabled) {\r\n            DomHandler.addClass(this.content.nativeElement, 'ui-fileupload-highlight');\r\n            this.dragHighlight = true;\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    onDragLeave(event) {\r\n        if(!this.disabled) {\r\n            DomHandler.removeClass(this.content.nativeElement, 'ui-fileupload-highlight');\r\n        }\r\n    }\r\n\r\n    onDrop(event) {\r\n        if(!this.disabled) {\r\n            DomHandler.removeClass(this.content.nativeElement, 'ui-fileupload-highlight');\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n\r\n            let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\r\n            let allowDrop = this.multiple||(files && files.length === 1);\r\n\r\n            if(allowDrop) {\r\n                this.onFileSelect(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    onFocus() {\r\n        this.focus = true;\r\n    }\r\n\r\n    onBlur() {\r\n        this.focus = false;\r\n    }\r\n\r\n    formatSize(bytes) {\r\n        if(bytes == 0) {\r\n            return '0 B';\r\n        }\r\n        let k = 1000,\r\n        dm = 3,\r\n        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n        i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n    onSimpleUploaderClick(event: Event) {\r\n        if(this.hasFiles()) {\r\n            this.upload();\r\n        }\r\n    }\r\n\r\n    getBlockableElement(): HTMLElement {\r\n      return this.el.nativeElement.children[0];\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if(this.content && this.content.nativeElement) {\r\n            this.content.nativeElement.removeEventListener('dragover', this.onDragOver);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,SharedModule,ButtonModule,ProgressBarModule,MessagesModule],\r\n    exports: [FileUpload,SharedModule,ButtonModule,ProgressBarModule,MessagesModule],\r\n    declarations: [FileUpload]\r\n})\r\nexport class FileUploadModule { }\r\n","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {FileUploadDemo} from './fileuploaddemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: FileUploadDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class FileUploadDemoRoutingModule {}\r\n","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FileUploadDemo} from './fileuploaddemo';\r\nimport {FileUploadDemoRoutingModule} from './fileuploaddemo-routing.module';\r\nimport {FileUploadModule} from '../../../components/fileupload/fileupload';\r\nimport {ToastModule} from '../../../components/toast/toast';\r\nimport {ButtonModule} from '../../../components/button/button';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFileUploadDemoRoutingModule,\r\n        FileUploadModule,\r\n        ToastModule,\r\n        ButtonModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tFileUploadDemo\r\n\t]\r\n})\r\nexport class FileUploadDemoModule {}\r\n","import {Component} from '@angular/core';\r\nimport {MessageService} from '../../../components/common/messageservice';\r\n\r\n@Component({\r\n    templateUrl: './fileuploaddemo.html',\r\n    providers: [MessageService]\r\n})\r\nexport class FileUploadDemo {\r\n    \r\n    uploadedFiles: any[] = [];\r\n    \r\n    constructor(private messageService: MessageService) {}\r\n\r\n    onUpload(event) {\r\n        for(let file of event.files) {\r\n            this.uploadedFiles.push(file);\r\n        }\r\n        \r\n        this.messageService.add({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\r\n    }\r\n    \r\n    onBasicUpload(event) {\r\n        this.messageService.add({severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode'});\r\n    }\r\n    \r\n    onBasicUploadAuto(event) {\r\n        this.messageService.add({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n}\r\n"],"sourceRoot":""}