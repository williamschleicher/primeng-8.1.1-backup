{"version":3,"sources":["webpack:///./src/app/showcase/components/orderlist/orderlistdemo.html","webpack:///./src/app/components/utils/filterutils.ts","webpack:///./src/app/showcase/components/orderlist/orderlistdemo-routing.module.ts","webpack:///./src/app/showcase/components/orderlist/orderlistdemo.module.ts","webpack:///./src/app/showcase/components/orderlist/orderlistdemo.ts"],"names":[],"mappings":"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","file":"components-orderlist-orderlistdemo-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">OrderList</span>\\r\\n        <span>OrderList is used to sort a collection. When the position of an item changes, the backend array is updated as well.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    \\r\\n    <p-orderList [value]=\\\"cars\\\" [listStyle]=\\\"{'height':'350px'}\\\" header=\\\"Cars\\\" filterBy=\\\"brand\\\" filterPlaceholder=\\\"Filter by brand\\\"\\r\\n        dragdrop=\\\"true\\\">\\r\\n        <ng-template let-car pTemplate=\\\"item\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\">\\r\\n                <img src=\\\"assets/showcase/images/demo/car/{{car.brand}}.png\\\" style=\\\"display:inline-block;margin:2px 0 2px 2px\\\" width=\\\"48\\\">\\r\\n                <div style=\\\"font-size:14px;float:right;margin:15px 5px 0 0\\\">{{car.brand}} - {{car.year}} - {{car.color}}</div>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </p-orderList>\\r\\n    \\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;OrderListModule&#125; from 'primeng/orderlist';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>OrderList requires an array as its value and a ng-template for its content where each item in the array\\r\\n                 can be accessed inside the ng-template using a local ng-template variable.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-orderList [value]=\\\"cars\\\"&gt;\\r\\n    &lt;ng-template let-car pTemplate=\\\"item\\\"&gt;\\r\\n        &lt;div class=\\\"ui-helper-clearfix\\\"&gt;\\r\\n            &lt;img src=\\\"assets/showcase/images/demo/car/{{car.brand}}.png\\\" style=\\\"display:inline-block;margin:2px 0 2px 2px\\\" width=\\\"48\\\"&gt;\\r\\n            &lt;div style=\\\"font-size:14px;float:right;margin:15px 5px 0 0\\\"&gt;{{car.brand}} - {{car.year}} - {{car.color}}&lt;/div&gt;\\r\\n        &lt;/div&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n&lt;/p-orderList&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class MyComponent &#123;\\r\\n\\r\\n    cars: Car[];\\r\\n    \\r\\n    ngOnInit() &#123;\\r\\n        this.cars = //initialize cars\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Multiple Selection</h3>\\r\\n            <p>Multiple items can either be selected using metaKey or toggled individually depending on the value of metaKeySelection property value which is true by default. On touch enabled\\r\\n            devices metaKeySelection is turned off automatically.</p>\\r\\n\\r\\n            <h3>Selection Binding</h3>\\r\\n            <p>The optional <b>selection</b> property is provided in case you'd like to a two-way binding to the selections.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-orderList [value]=\\\"cars\\\" [(selection)]=\\\"selectedCars\\\"&gt;\\r\\n    &lt;ng-template let-car pTemplate=\\\"item\\\"&gt;\\r\\n        &lt;div class=\\\"ui-helper-clearfix\\\"&gt;\\r\\n            &lt;img src=\\\"assets/showcase/images/demo/car/{{car.brand}}.png\\\" style=\\\"display:inline-block;margin:2px 0 2px 2px\\\" width=\\\"48\\\"&gt;\\r\\n            &lt;div style=\\\"font-size:14px;float:right;margin:15px 5px 0 0\\\"&gt;{{car.brand}} - {{car.year}} - {{car.color}}&lt;/div&gt;\\r\\n        &lt;/div&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n&lt;/p-orderList&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class MyComponent &#123;\\r\\n\\r\\n    cars: Car[];\\r\\n\\r\\n    selectedCars: Car[];\\r\\n    \\r\\n    ngOnInit() &#123;\\r\\n        this.cars = //initialize cars\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n            \\r\\n            <h3>Filtering</h3>\\r\\n            <p>Items can be filtered using an input field by enabling the filterBy property that specifies the fields to use in filtering.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-orderList [value]=\\\"cars\\\" filterBy=\\\"brand\\\"&gt;&lt;/p-orderList&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <p>Multiple fields can be defines using a comma separates list.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-orderList [value]=\\\"cars\\\" filterBy=\\\"brand,color,address.city\\\"&gt;&lt;/p-orderList&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>DragDrop</h3>\\r\\n            <p>Items can be reordered using drag and drop by enabling dragdrop property.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-orderList [value]=\\\"cars\\\" dragdrop=\\\"true\\\"&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Buttons Location</h3>\\r\\n            <p>Buttons that control the ordering are displayed at the left side of the list by default, controlsPosition property enables customizing the location. Currently\\r\\n                right is the available alternative.\\r\\n            </p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-orderList [value]=\\\"cars\\\" controlsPosition=\\\"right\\\"&gt;\\r\\n</code>\\r\\n</pre>\\r\\n            \\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>value</td>\\r\\n                            <td>array</td>\\r\\n                            <td>null</td>\\r\\n                            <td>An array of objects to reorder.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>selection</td>\\r\\n                            <td>array</td>\\r\\n                            <td>null</td>\\r\\n                            <td>An array of objects to bind the selections.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>header</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Text for the caption</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>listStyle</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the list element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>filterBy</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>When specified displays an input field to filter the items on keyup and decides which fields to search against.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>filterMatchMode</td>\\r\\n                            <td>string</td>\\r\\n                            <td>contains</td>\\r\\n                            <td>Defines how the items are filtered, valid values are \\\"contains\\\" (default) \\\"startsWith\\\", \\\"endsWith\\\", \\\"equals\\\", \\\"notEquals\\\", \\\"in\\\", \\\"lt\\\", \\\"lte\\\", \\\"gt\\\" and \\\"gte\\\".</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>metaKeySelection</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>true</td>\\r\\n                            <td>When true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item\\r\\n                            can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>dragdrop</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Whether to enable dragdrop based reordering.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>filterPlaceHolder</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Placeholder text on filter input.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>trackBy</td>\\r\\n                            <td>Function</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>controlsPosition</td>\\r\\n                            <td>string</td>\\r\\n                            <td>left</td>\\r\\n                            <td>Defines the location of the buttons with respect to the list, valid values are \\\"left\\\" or \\\"right\\\".</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ariaFilterLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Defines a string that labels the filter input.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            \\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                    <tr>\\r\\n                        <th>Name</th>\\r\\n                        <th>Parameters</th>\\r\\n                        <th>Description</th>\\r\\n                    </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>onReorder</td>\\r\\n                            <td>event: browser event</td>\\r\\n                            <td>Callback to invoke when list is reordered.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onSelectionChange</td>\\r\\n                            <td>originalEvent: browser event<br/>\\r\\n                                value: Current selection</td>\\r\\n                            <td>Callback to invoke when selection changes.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onFilterEvent</td>\\r\\n                            <td>originalEvent: browser event<br/>\\r\\n                                value: Current filter values</td>\\r\\n                            <td>Callback to invoke when filtering occurs.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-orderlist</td>\\r\\n                            <td>Container element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-orderlist-list</td>\\r\\n                            <td>List container.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-orderlist-item</td>\\r\\n                            <td>An item in the list.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/orderlist\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-orderList [value]=\\\"cars\\\" [listStyle]=\\\"&#123;'height':'250px'&#125;\\\" header=\\\"Cars\\\" \\r\\n    filter=\\\"filter\\\" filterBy=\\\"brand\\\" filterPlaceholder=\\\"Filter by brand\\\" dragdrop=\\\"true\\\"&gt;\\r\\n    &lt;ng-template let-car pTemplate=\\\"item\\\"&gt;\\r\\n        &lt;div class=\\\"ui-helper-clearfix\\\"&gt;\\r\\n            &lt;img src=\\\"assets/showcase/images/demo/car/{{car.brand}}.png\\\" style=\\\"display:inline-block;margin:2px 0 2px 2px\\\" width=\\\"48\\\"&gt;\\r\\n            &lt;div style=\\\"font-size:14px;float:right;margin:15px 5px 0 0\\\"&gt;{{car.brand}} - {{car.year}} - {{car.color}}&lt;/div&gt;\\r\\n        &lt;/div&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n&lt;/p-orderList&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class OrderListDemo &#123;\\r\\n\\r\\n    cars: Car[];\\r\\n    \\r\\n    constructor(private carService: CarService) &#123; &#125;\\r\\n\\r\\n    ngOnInit() &#123;\\r\\n        this.carService.getCarsSmall().then(cars => this.cars = cars);\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\\r\\n\"","import { ObjectUtils } from '../utils/objectutils';\r\n\r\nexport class FilterUtils {\r\n\r\n    public static filter(value: any[], fields: any[], filterValue: string, filterMatchMode: string) {\r\n        let filteredItems: any[] = [];\r\n        let filterText = ObjectUtils.removeAccents(filterValue).toLowerCase();\r\n\r\n        if (value) {\r\n            for (let item of value) {\r\n                for (let field of fields) {\r\n                    let fieldValue = ObjectUtils.removeAccents(String(ObjectUtils.resolveFieldData(item, field))).toLowerCase();\r\n                    \r\n                    if (FilterUtils[filterMatchMode](fieldValue,filterText)) {\r\n                        filteredItems.push(item);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return filteredItems;\r\n    }\r\n\r\n    public static startsWith(value, filter): boolean {\r\n        if (filter === undefined || filter === null || filter.trim() === '') {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        let filterValue = ObjectUtils.removeAccents(filter.toString()).toLowerCase();\r\n        let stringValue = ObjectUtils.removeAccents(value.toString()).toLowerCase();\r\n\r\n        return stringValue.slice(0, filterValue.length) === filterValue;\r\n    }\r\n\r\n    public static contains(value, filter): boolean {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        let filterValue = ObjectUtils.removeAccents(filter.toString()).toLowerCase();\r\n        let stringValue = ObjectUtils.removeAccents(value.toString()).toLowerCase();\r\n\r\n        return stringValue.indexOf(filterValue) !== -1;\r\n    }\r\n\r\n    public static endsWith(value, filter): boolean {\r\n        if (filter === undefined || filter === null || filter.trim() === '') {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        let filterValue = ObjectUtils.removeAccents(filter.toString()).toLowerCase();\r\n        let stringValue = ObjectUtils.removeAccents(value.toString()).toLowerCase();\r\n\r\n        return stringValue.indexOf(filterValue, stringValue.length - filterValue.length) !== -1;\r\n    }\r\n\r\n    public static equals(value, filter): boolean {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        if (value.getTime && filter.getTime)\r\n            return value.getTime() === filter.getTime();\r\n        else\r\n            return ObjectUtils.removeAccents(value.toString()).toLowerCase() == ObjectUtils.removeAccents(filter.toString()).toLowerCase();\r\n    }\r\n\r\n    public static notEquals(value, filter): boolean {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return false;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return true;\r\n        }\r\n\r\n        if (value.getTime && filter.getTime)\r\n            return value.getTime() !== filter.getTime();\r\n        else\r\n            return ObjectUtils.removeAccents(value.toString()).toLowerCase() != ObjectUtils.removeAccents(filter.toString()).toLowerCase();\r\n    }\r\n\r\n    public static in(value, filter: any[]): boolean {\r\n        if (filter === undefined || filter === null || filter.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0; i < filter.length; i++) {\r\n            if (filter[i] === value || (value.getTime && filter[i].getTime && value.getTime() === filter[i].getTime())) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public static lt(value, filter): boolean {\r\n        if (filter === undefined || filter === null) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        if (value.getTime && filter.getTime)\r\n            return value.getTime() < filter.getTime();\r\n        else\r\n            return value < filter;\r\n    }\r\n    \r\n    public static lte(value, filter): boolean {\r\n        if (filter === undefined || filter === null) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        if (value.getTime && filter.getTime)\r\n            return value.getTime() <= filter.getTime();\r\n        else\r\n            return value <= filter;\r\n    }\r\n\r\n    public static gt(value, filter): boolean {\r\n        if (filter === undefined || filter === null) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        if (value.getTime && filter.getTime)\r\n            return value.getTime() > filter.getTime();\r\n        else\r\n            return value > filter;\r\n    }\r\n    \r\n    public static gte(value, filter): boolean {\r\n        if (filter === undefined || filter === null) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        if (value.getTime && filter.getTime)\r\n            return value.getTime() >= filter.getTime();\r\n        else\r\n            return value >= filter;\r\n    }\r\n}\r\n","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {OrderListDemo} from './orderlistdemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: OrderListDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class OrderListDemoRoutingModule {}\r\n","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {OrderListDemo} from './orderlistdemo';\r\nimport {OrderListDemoRoutingModule} from './orderlistdemo-routing.module';\r\nimport {OrderListModule} from '../../../components/orderlist/orderlist';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tOrderListDemoRoutingModule,\r\n        OrderListModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tOrderListDemo\r\n\t]\r\n})\r\nexport class OrderListDemoModule {}\r\n","import {Component} from '@angular/core';\r\nimport {Car} from '../../components/domain/car';\r\nimport {CarService} from '../../service/carservice';\r\n\r\n@Component({\r\n    templateUrl: './orderlistdemo.html'\r\n})\r\nexport class OrderListDemo {\r\n\r\n    cars: Car[];\r\n    \r\n    constructor(private carService: CarService) { }\r\n\r\n    ngOnInit() {\r\n        this.carService.getCarsSmall().then(cars => this.cars = cars);\r\n    }\r\n}"],"sourceRoot":""}