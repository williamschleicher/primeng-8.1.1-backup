{"version":3,"sources":["webpack:///./src/app/showcase/components/inputswitch/inputswitchdemo.html","webpack:///./src/app/components/inputswitch/inputswitch.ts","webpack:///./src/app/showcase/components/inputswitch/inputswitchdemo-routing.module.ts","webpack:///./src/app/showcase/components/inputswitch/inputswitchdemo.module.ts","webpack:///./src/app/showcase/components/inputswitch/inputswitchdemo.ts"],"names":[],"mappings":"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","file":"components-inputswitch-inputswitchdemo-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">InputSwitch</span>\\r\\n        <span>InputSwitch is used to select a boolean value.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <h3 class=\\\"first\\\">Basic - {{checked1}}</h3>\\r\\n    <p-inputSwitch [(ngModel)]=\\\"checked1\\\"></p-inputSwitch>\\r\\n\\r\\n    <h3>Labels - {{checked2}}</h3>\\r\\n    <p-inputSwitch [(ngModel)]=\\\"checked2\\\"></p-inputSwitch>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;InputSwitchModule&#125; from 'primeng/inputswitch';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>Two-way binding to a boolean property is defined using the standard ngModel directive.</p>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-inputSwitch [(ngModel)]=\\\"checked\\\"&gt;&lt;/p-inputSwitch&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class ModelComponent &#123;\\r\\n\\r\\n    checked: boolean;\\r\\n\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <p>As model is two-way binding enabled, setting the bound value as true displays the state as checked by default.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class ModelComponent &#123;\\r\\n\\r\\n   checked: boolean = true;\\r\\n\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Model Driven Forms</h3>\\r\\n            <p>InputSwitch can be used in a model driven form as well.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-inputSwitch formControlName=\\\"enabled\\\"&gt;&lt;/p-inputSwitch&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td>tabindex</td>\\r\\n                          <td>number</td>\\r\\n                          <td>null</td>\\r\\n                          <td>Index of the element in tabbing order.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>inputId</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Identifier of the input element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>name</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Name of the input element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>disabled</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When present, it specifies that the element should be disabled.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>readonly</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When present, it specifies that the component cannot be edited.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                    <tr>\\r\\n                        <th>Name</th>\\r\\n                        <th>Parameters</th>\\r\\n                        <th>Description</th>\\r\\n                    </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                    <tr>\\r\\n                        <td>onChange</td>\\r\\n                        <td>event.originalEvent: browser event<br>\\r\\n                            event.checked: checked state as a boolean</td>\\r\\n                        <td>Callback to invoke on state change.</td>\\r\\n                    </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-inputSwitch (onChange)=\\\"handleChange($event)\\\" [(ngModel)]=\\\"val\\\"&gt;&lt;/p-inputSwitch&gt;\\r\\n</code>\\r\\n</pre>\\r\\n <pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class ModelComponent &#123;\\r\\n\\r\\n    handleChange(e) &#123;\\r\\n        let isChecked = e.checked;\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-inputswitch</td>\\r\\n                            <td>Container element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-inputswitch-checked</td>\\r\\n                            <td>Container element in active state.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-inputswitch-slider</td>\\r\\n                            <td>Slider element behind the handle.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/inputswitch\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;h3 class=\\\"first\\\"&gt;Basic - {{checked1}}&lt;/h3&gt;\\r\\n&lt;p-inputSwitch [(ngModel)]=\\\"checked1\\\"&gt;&lt;/p-inputSwitch&gt;\\r\\n\\r\\n&lt;h3&gt;Labels - &lt;span&gt; {{checked2}}&lt;/h3&gt;\\r\\n&lt;p-inputSwitch [(ngModel)]=\\\"checked2\\\"&gt;&lt;/p-inputSwitch&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class InputSwitchDemo &#123;\\r\\n\\r\\n    checked1: boolean = false;\\r\\n\\r\\n    checked2: boolean = true;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\\r\\n\"","import {NgModule,Component,Input,forwardRef,EventEmitter,Output,ChangeDetectorRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR,ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const INPUTSWITCH_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => InputSwitch),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-inputSwitch',\r\n    template: `\r\n        <div [ngClass]=\"{'ui-inputswitch ui-widget': true, 'ui-inputswitch-checked': checked, 'ui-state-disabled': disabled, 'ui-inputswitch-readonly': readonly, 'ui-inputswitch-focus': focused}\" \r\n            [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick($event, cb)\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\r\n            <div class=\"ui-helper-hidden-accessible\">\r\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.tabindex]=\"tabindex\" [checked]=\"checked\" (change)=\"onInputChange($event)\"\r\n                        (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [disabled]=\"disabled\" />\r\n            </div>\r\n            <span class=\"ui-inputswitch-slider\"></span>\r\n        </div>\r\n    `,\r\n    providers: [INPUTSWITCH_VALUE_ACCESSOR]\r\n})\r\nexport class InputSwitch implements ControlValueAccessor {\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() readonly: boolean;\r\n    \r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    checked: boolean = false;\r\n\r\n    focused: boolean = false;\r\n\r\n    onModelChange: Function = () => {};\r\n\r\n    onModelTouched: Function = () => {};\r\n\r\n    constructor(private cd: ChangeDetectorRef) {}\r\n\r\n    onClick(event: Event, cb: HTMLInputElement) {\r\n        if (!this.disabled && !this.readonly) {  \r\n            this.toggle(event);\r\n            cb.focus();\r\n        }\r\n    }\r\n\r\n    onInputChange(event: Event) {\r\n        if (!this.readonly) {\r\n            const inputChecked = (<HTMLInputElement> event.target).checked;\r\n            this.updateModel(event, inputChecked);\r\n        }\r\n    }\r\n\r\n    toggle(event: Event) {\r\n        this.updateModel(event, !this.checked);\r\n    }\r\n\r\n    updateModel(event: Event, value: boolean) {\r\n        this.checked = value;\r\n        this.onModelChange(this.checked);\r\n        this.onChange.emit({\r\n            originalEvent: event,\r\n            checked: this.checked\r\n        });\r\n    }\r\n\r\n    onFocus(event: Event) {\r\n        this.focused = true;\r\n    }\r\n\r\n    onBlur(event: Event) {\r\n        this.focused = false;\r\n        this.onModelTouched();\r\n    }\r\n\r\n    writeValue(checked: any) : void {\r\n        this.checked = checked;\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [InputSwitch],\r\n    declarations: [InputSwitch]\r\n})\r\nexport class InputSwitchModule { }\r\n","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {InputSwitchDemo} from './inputswitchdemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: InputSwitchDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class InputSwitchDemoRoutingModule {}\r\n","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule}    from '@angular/forms';\r\nimport {InputSwitchDemo} from './inputswitchdemo';\r\nimport {InputSwitchDemoRoutingModule} from './inputswitchdemo-routing.module';\r\nimport {InputSwitchModule} from '../../../components/inputswitch/inputswitch';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n        FormsModule,\r\n\t\tInputSwitchDemoRoutingModule,\r\n        InputSwitchModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tInputSwitchDemo\r\n\t]\r\n})\r\nexport class InputSwitchDemoModule {}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './inputswitchdemo.html'\r\n})\r\nexport class InputSwitchDemo {\r\n\r\n    checked1: boolean = false;\r\n\r\n    checked2: boolean = true;\r\n}"],"sourceRoot":""}