{"version":3,"sources":["webpack:///./src/app/showcase/components/overlaypanel/overlaypaneldemo.html","webpack:///./src/app/components/overlaypanel/overlaypanel.ts","webpack:///./src/app/showcase/components/overlaypanel/overlaypaneldemo-routing.module.ts","webpack:///./src/app/showcase/components/overlaypanel/overlaypaneldemo.module.ts","webpack:///./src/app/showcase/components/overlaypanel/overlaypaneldemo.ts"],"names":[],"mappings":"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","file":"components-overlaypanel-overlaypaneldemo-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">OverlayPanel</span>\\r\\n        <span>OverlayPanel is a container component that can overlay other components on page.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <h3 class=\\\"first\\\">Basic</h3>\\r\\n    <p>Click the button to show the panel.</p>\\r\\n    <button type=\\\"text\\\" pButton label=\\\"Basic\\\" (click)=\\\"op1.toggle($event)\\\"></button>\\r\\n\\r\\n    <p-overlayPanel #op1>\\r\\n        <img src=\\\"assets/showcase/images/demo/galleria/galleria1.jpg\\\" alt=\\\"Galleria 1\\\" />\\r\\n    </p-overlayPanel>\\r\\n    \\r\\n    <h3>Customized</h3>\\r\\n    <p>This OverlayPanel gets displayed on hover of the icon and displays a close icon.</p>\\r\\n    <i class=\\\"pi pi-search\\\" (mouseenter)=\\\"op2.show($event)\\\" style=\\\"font-size:24px\\\"></i>\\r\\n    \\r\\n    <p-overlayPanel #op2 [showCloseIcon]=\\\"true\\\" [dismissable]=\\\"false\\\">\\r\\n        <p-table [value]=\\\"cars1\\\" [style]=\\\"{width: '500px'}\\\" [paginator]=\\\"true\\\" [rows]=\\\"5\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n                <tr>\\r\\n                    <th pSortableColumn=\\\"vin\\\">Vin <p-sortIcon field=\\\"vin\\\"></p-sortIcon></th>\\r\\n                    <th pSortableColumn=\\\"year\\\">Year <p-sortIcon field=\\\"year\\\"></p-sortIcon></th>\\r\\n                    <th pSortableColumn=\\\"brand\\\">Brand <p-sortIcon field=\\\"brand\\\"></p-sortIcon></th>\\r\\n                    <th pSortableColumn=\\\"color\\\">Color <p-sortIcon field=\\\"color\\\"></p-sortIcon></th>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-car>\\r\\n                <tr>\\r\\n                    <td>{{car.vin}}</td>\\r\\n                    <td>{{car.year}}</td>\\r\\n                    <td>{{car.brand}}</td>\\r\\n                    <td>{{car.color}}</td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        </p-table>\\r\\n    </p-overlayPanel>\\r\\n    \\r\\n    <h3>Table Integration</h3>\\r\\n    <p-table [value]=\\\"cars2\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n                <th style=\\\"width: 4em\\\"></th>\\r\\n                <th>Vin</th>\\r\\n                <th>Year</th>\\r\\n                <th>Brand</th>\\r\\n                <th>Color</th>\\r\\n                \\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-car>\\r\\n            <tr>\\r\\n                <td>\\r\\n                    <button type=\\\"button\\\" pButton (click)=\\\"selectCar($event,car,op3)\\\" icon=\\\"pi pi-search\\\"></button>\\r\\n                </td>\\r\\n                <td>{{car.vin}}</td>\\r\\n                <td>{{car.year}}</td>\\r\\n                <td>{{car.brand}}</td>\\r\\n                <td>{{car.color}}</td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n    </p-table>\\r\\n    \\r\\n    <p-overlayPanel #op3>\\r\\n        <img src=\\\"assets/showcase/images/demo/car/{{selectedCar.brand}}.png\\\" width=\\\"120\\\" height=\\\"120\\\" *ngIf=\\\"selectedCar\\\"/>\\r\\n    </p-overlayPanel>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;OverlayPanelModule&#125; from 'primeng/overlaypanel';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>OverlayPanel is defined using p-overlayPanel element and is displayed using the <i>show</i> or <i>toggle</i> method of a local ng-template variable.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-overlayPanel #op&gt;\\r\\n    Content\\r\\n&lt;/p-overlayPanel&gt;\\r\\n\\r\\n&lt;button type=\\\"text\\\" pButton label=\\\"Basic\\\" (click)=\\\"op.toggle($event)\\\"&gt;&lt;/button&gt;\\r\\n</code>\\r\\n</pre>\\r\\n            <h3>Show and Hide</h3>\\r\\n            <p><i>show</i> method takes two parameters, first one is the event and it is mandatory. By default the target component to align the overlay is the event target, \\r\\n            if you'd like to align it to another element, provide it as the second parameter. Similarly calling <i>hide()</i> hides the overlay panel and the <i>toggle</i> method \\r\\n            toggles the visibility of the panel. In example below, clicking the button displays the overlayPanel aligned to the actualTarget div, not the button itself.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-overlayPanel #op&gt;\\r\\n    Content\\r\\n&lt;/p-overlayPanel&gt;\\r\\n\\r\\n&lt;button type=\\\"text\\\" pButton label=\\\"Custom Target\\\" (click)=\\\"op.show($event, actualTarget)\\\"&gt;&lt;/button&gt;\\r\\n&lt;div #actualTarget&gt;&lt;/div&gt;\\r\\n</code>\\r\\n</pre>\\r\\n        \\r\\n        \\r\\n            <h3>Dismissable and CloseIcon</h3>\\r\\n            <p>Clicking outside the overlay hides the panel, setting dismissable to false disables this behavior. Additionally enablign showCloseIcon property \\r\\n            displays a close icon at the top right corner to close the panel</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-overlayPanel #op [dismissable]=\\\"true\\\" [showCloseIcon]=\\\"true\\\"&gt;\\r\\n    Content\\r\\n&lt;/p-overlayPanel&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Animation Configuration</h3>\\r\\n            <p>Transition of the open and hide animations can be customized using the showTransitionOptions and hideTransitionOptions properties, \\r\\n                example below disables the animations altogether.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-overlayPanel [showTransitionOptions]=\\\"'0ms'\\\" [hideTransitionOptions]=\\\"'0ms'\\\" #op [dismissable]=\\\"true\\\" [showCloseIcon]=\\\"true\\\"&gt;\\r\\n    Content\\r\\n&lt;/p-overlayPanel&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>dismissable</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>true</td>\\r\\n                            <td>Enables to hide the overlay when outside is clicked.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>showCloseIcon</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When enabled, displays a close icon at top right corner.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>appendTo</td>\\r\\n                            <td>any</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Target element to attach the panel, valid values are \\\"body\\\" or a local ng-template variable of another element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>baseZIndex</td>\\r\\n                            <td>number</td>\\r\\n                            <td>0</td>\\r\\n                            <td>Base zIndex value to use in layering.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>autoZIndex</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>true</td>\\r\\n                            <td>Whether to automatically manage layering.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>showTransitionOptions</td>\\r\\n                            <td>string</td>\\r\\n                            <td>225ms ease-out</td>\\r\\n                            <td>Transition options of the show animation.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>hideTransitionOptions</td>\\r\\n                            <td>string</td>\\r\\n                            <td>195ms ease-in</td>\\r\\n                            <td>Transition options of the hide animation.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>onShow</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Callback to invoke when an overlay becomes visible.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onHide</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Callback to invoke after overlay gets hidden.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            \\r\\n            <h3>Methods</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>toggle</td>\\r\\n                            <td>event: browser event <br>\\r\\n                                target?: target element to align the panel, defaults to event.target\\r\\n                            </td>\\r\\n                            <td>Toggles the visibility of the panel.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>show</td>\\r\\n                            <td>event: browser event <br>\\r\\n                                target?: target element to align the panel to\\r\\n                            </td>\\r\\n                            <td>Displays the panel.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>hide</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Hides the panel.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            \\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-overlaypanel</td>\\r\\n                            <td>Container element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-overlaypanel-content</td>\\r\\n                            <td>Content of the panel.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-overlaypanel-close</td>\\r\\n                            <td>Close icon.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/overlaypanel\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\r\\n&lt;p&gt;Click the button to show the panel.&lt;/p&gt;\\r\\n&lt;button type=\\\"text\\\" pButton label=\\\"Basic\\\" (click)=\\\"op1.toggle($event)\\\"&gt;&lt;/button&gt;\\r\\n\\r\\n&lt;p-overlayPanel #op1&gt;\\r\\n    &lt;img src=\\\"assets/showcase/images/demo/galleria/galleria1.jpg\\\" alt=\\\"Galleria 1\\\" /&gt;\\r\\n&lt;/p-overlayPanel&gt;\\r\\n\\r\\n&lt;h3&gt;Customized&lt;/h3&gt;\\r\\n&lt;p&gt;This OverlayPanel gets displayed on hover of the icon, is not dismissable and displays a close icon.&lt;/p&gt;\\r\\n&lt;i class=\\\"pi pi-search\\\" (mouseenter)=\\\"op2.show($event)\\\" style=\\\"font-size:24px\\\"&gt;&lt;/i&gt;\\r\\n\\r\\n&lt;p-overlayPanel #op2 [showCloseIcon]=\\\"true\\\" [dismissable]=\\\"false\\\"&gt;\\r\\n    &lt;p-table [value]=\\\"cars1\\\" [style]=\\\"&#123;width: '500px'&#125; [paginator]=\\\"true\\\" [rows]=\\\"5\\\"\\\"&gt;\\r\\n        &lt;ng-template pTemplate=\\\"header\\\"&gt;\\r\\n            &lt;tr&gt;\\r\\n                &lt;th pSortableColumn=\\\"vin\\\"&gt;Vin &lt;p-sortIcon field=\\\"vin\\\"&gt;&lt;/p-sortIcon&gt;&lt;/th&gt;\\r\\n                &lt;th pSortableColumn=\\\"year\\\"&gt;Year &lt;p-sortIcon field=\\\"year\\\"&gt;&lt;/p-sortIcon&gt;&lt;/th&gt;\\r\\n                &lt;th pSortableColumn=\\\"brand\\\"&gt;Brand &lt;p-sortIcon field=\\\"brand\\\"&gt;&lt;/p-sortIcon&gt;&lt;/th&gt;\\r\\n                &lt;th pSortableColumn=\\\"color\\\"&gt;Color &lt;p-sortIcon field=\\\"color\\\"&gt;&lt;/p-sortIcon&gt;&lt;/th&gt;\\r\\n            &lt;/tr&gt;\\r\\n        &lt;/ng-template&gt;\\r\\n        &lt;ng-template pTemplate=\\\"body\\\" let-car&gt;\\r\\n            &lt;tr&gt;\\r\\n                &lt;td&gt;&#123;&#123;car.vin&#125;&#125;&lt;/td&gt;\\r\\n                &lt;td&gt;&#123;&#123;car.year&#125;&#125;&lt;/td&gt;\\r\\n                &lt;td&gt;&#123;&#123;car.brand&#125;&#125;&lt;/td&gt;\\r\\n                &lt;td&gt;&#123;&#123;car.color&#125;&#125;&lt;/td&gt;\\r\\n            &lt;/tr&gt;\\r\\n        &lt;/ng-template&gt;\\r\\n    &lt;/p-table&gt;\\r\\n&lt;/p-overlayPanel&gt;\\r\\n\\r\\n&lt;h3&gt;Table Integration&lt;/h3&gt;\\r\\n&lt;p-table [value]=\\\"cars2\\\"&gt;\\r\\n    &lt;ng-template pTemplate=\\\"header\\\"&gt;\\r\\n        &lt;tr&gt;\\r\\n            &lt;th style=\\\"width: 4em\\\"&gt;&lt;/th&gt;\\r\\n            &lt;th&gt;Vin&lt;/th&gt;\\r\\n            &lt;th&gt;Year&lt;/th&gt;\\r\\n            &lt;th&gt;Brand&lt;/th&gt;\\r\\n            &lt;th&gt;Color&lt;/th&gt;\\r\\n        &lt;/tr&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n    &lt;ng-template pTemplate=\\\"body\\\" let-car&gt;\\r\\n        &lt;tr&gt;\\r\\n            &lt;td&gt;\\r\\n                &lt;button type=\\\"button\\\" pButton (click)=\\\"selectCar($event,car,op3)\\\" icon=\\\"pi pi-search\\\"&gt;&lt;/button&gt;\\r\\n            &lt;/td&gt;\\r\\n            &lt;td&gt;&#123;&#123;car.vin&#125;&#125;&lt;/td&gt;\\r\\n            &lt;td&gt;&#123;&#123;car.year&#125;&#125;&lt;/td&gt;\\r\\n            &lt;td&gt;&#123;&#123;car.brand&#125;&#125;&lt;/td&gt;\\r\\n            &lt;td&gt;&#123;&#123;car.color&#125;&#125;&lt;/td&gt;\\r\\n        &lt;/tr&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n&lt;/p-table&gt;\\r\\n\\r\\n&lt;p-overlayPanel #op3&gt;\\r\\n    &lt;img src=\\\"assets/showcase/images/demo/car/&#123;&#123;selectedCar.brand&#125;&#125;.png\\\" *ngIf=\\\"selectedCar\\\"/&gt;\\r\\n&lt;/p-overlayPanel&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class OverlayPanelDemo &#123;\\r\\n\\r\\n    cars1: Car[];\\r\\n    \\r\\n    cars2: Car[];\\r\\n    \\r\\n    selectedCar: Car;\\r\\n    \\r\\n    constructor(private carService: CarService) &#123; &#125;\\r\\n\\r\\n    ngOnInit() &#123;\\r\\n        this.carService.getCarsSmall().then(cars => this.cars1 = cars);\\r\\n        this.carService.getCarsSmall().then(cars => this.cars2 = cars);\\r\\n    &#125;\\r\\n    \\r\\n    selectCar(event,car: Car, overlaypanel: OverlayPanel) &#123;\\r\\n        this.selectedCar = car;\\r\\n        overlaypanel.toggle(event);\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\\r\\n\"","import {NgModule,Component,Input,Output,OnDestroy,EventEmitter,Renderer2,ElementRef,ChangeDetectorRef,NgZone} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from '../dom/domhandler';\r\nimport {trigger,state,style,transition,animate,AnimationEvent} from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'p-overlayPanel',\r\n    template: `\r\n        <div [ngClass]=\"'ui-overlaypanel ui-widget ui-widget-content ui-corner-all ui-shadow'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onContainerClick()\"\r\n            [@animation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" *ngIf=\"visible\">\r\n            <div class=\"ui-overlaypanel-content\">\r\n                <ng-content></ng-content>\r\n            </div>\r\n            <a tabindex=\"0\" *ngIf=\"showCloseIcon\" class=\"ui-overlaypanel-close ui-state-default\" (click)=\"onCloseClick($event)\" (keydown.enter)=\"hide()\">\r\n                <span class=\"ui-overlaypanel-close-icon pi pi-times\"></span>\r\n            </a>\r\n        </div>\r\n    `,\r\n    animations: [\r\n        trigger('animation', [\r\n            state('void', style({\r\n                transform: 'translateY(5%)',\r\n                opacity: 0\r\n            })),\r\n            state('visible', style({\r\n                transform: 'translateY(0)',\r\n                opacity: 1\r\n            })),\r\n            transition('void => visible', animate('{{showTransitionParams}}')),\r\n            transition('visible => void', animate('{{hideTransitionParams}}'))\r\n        ])\r\n    ]\r\n})\r\nexport class OverlayPanel implements OnDestroy {\r\n\r\n    @Input() dismissable: boolean = true;\r\n\r\n    @Input() showCloseIcon: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n    \r\n    @Input() appendTo: any;\r\n\r\n    @Input() autoZIndex: boolean = true;\r\n    \r\n    @Input() baseZIndex: number = 0;\r\n    \r\n    @Input() showTransitionOptions: string = '225ms ease-out';\r\n\r\n    @Input() hideTransitionOptions: string = '195ms ease-in';\r\n\r\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\r\n    \r\n    container: HTMLDivElement;\r\n\r\n    visible: boolean = false;\r\n\r\n    isContainerClicked: boolean = true;\r\n\r\n    documentClickListener: any;\r\n            \r\n    target: any;\r\n    \r\n    willHide: boolean;\r\n        \r\n    documentResizeListener: any;\r\n    \r\n    constructor(public el: ElementRef, public renderer: Renderer2, private cd: ChangeDetectorRef, private zone: NgZone) {}\r\n        \r\n    onContainerClick() {\r\n        this.isContainerClicked = true;\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if (!this.documentClickListener && this.dismissable) {\r\n            this.zone.runOutsideAngular(() => {\r\n                let documentEvent = DomHandler.isIOS() ? 'touchstart' : 'click';\r\n                this.documentClickListener = this.renderer.listen('document', documentEvent, (event) => {\r\n                    if (!this.container.contains(event.target) && this.target !== event.target && !this.target.contains(event.target) && !this.isContainerClicked) {\r\n                        this.zone.run(() => {\r\n                            this.hide();\r\n                        });\r\n                    }\r\n\r\n                    this.isContainerClicked = false;\r\n                    this.cd.markForCheck();\r\n                });\r\n            });\r\n        }\r\n    }\r\n    \r\n    unbindDocumentClickListener() {\r\n        if (this.documentClickListener) {\r\n            this.documentClickListener();\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n    \r\n    toggle(event, target?) {\r\n        if (this.visible) {\r\n            this.visible = false;\r\n\r\n            if (this.hasTargetChanged(event, target)) {\r\n                this.target = target||event.currentTarget||event.target;\r\n\r\n                setTimeout(() => {\r\n                    this.visible = true;\r\n                }, 200);\r\n            }\r\n        }\r\n        else {\r\n            this.show(event, target);\r\n        }\r\n    }\r\n\r\n    show(event, target?) {\r\n        this.target = target||event.currentTarget||event.target;\r\n        this.visible = true;\r\n    }\r\n\r\n    hasTargetChanged(event, target) {\r\n        return this.target != null && this.target !== (target||event.currentTarget||event.target);\r\n    }\r\n\r\n    appendContainer() {\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.container);\r\n            else\r\n                DomHandler.appendChild(this.container, this.appendTo);\r\n        }\r\n    }\r\n\r\n    restoreAppend() {\r\n        if (this.container && this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.container);\r\n        }\r\n    }\r\n\r\n    onAnimationStart(event: AnimationEvent) {\r\n        switch(event.toState) {\r\n            case 'visible':\r\n                this.container = event.element;\r\n                this.onShow.emit(null);\r\n                this.appendContainer();\r\n                if (this.autoZIndex) {\r\n                    this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\r\n                }\r\n                DomHandler.absolutePosition(this.container, this.target);\r\n                if (DomHandler.getOffset(this.container).top < DomHandler.getOffset(this.target).top) {\r\n                    DomHandler.addClass(this.container, 'ui-overlaypanel-flipped');\r\n                }\r\n                if (Math.floor(DomHandler.getOffset(this.container).left) < Math.floor(DomHandler.getOffset(this.target).left) &&\r\n                    DomHandler.getOffset(this.container).left > 0) {\r\n                    DomHandler.addClass(this.container, 'ui-overlaypanel-shifted');\r\n                }\r\n                this.bindDocumentClickListener();\r\n                this.bindDocumentResizeListener();\r\n            break;\r\n\r\n            case 'void':\r\n                this.onContainerDestroy();\r\n                this.onHide.emit({});\r\n            break;\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.visible = false;\r\n    }\r\n\r\n    onCloseClick(event) {\r\n        this.hide();\r\n        event.preventDefault();\r\n    }\r\n\r\n    onWindowResize(event) {\r\n        this.hide();\r\n    }\r\n\r\n    bindDocumentResizeListener() {\r\n        this.documentResizeListener = this.onWindowResize.bind(this);\r\n        window.addEventListener('resize', this.documentResizeListener);\r\n    }\r\n    \r\n    unbindDocumentResizeListener() {\r\n        if (this.documentResizeListener) {\r\n            window.removeEventListener('resize', this.documentResizeListener);\r\n            this.documentResizeListener = null;\r\n        }\r\n    }\r\n\r\n    onContainerDestroy() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindDocumentResizeListener();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.target = null;\r\n        if (this.container) {\r\n            this.restoreAppend();\r\n            this.onContainerDestroy();\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [OverlayPanel],\r\n    declarations: [OverlayPanel]\r\n})\r\nexport class OverlayPanelModule { }\r\n","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {OverlayPanelDemo} from './overlaypaneldemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: OverlayPanelDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class OverlayPanelDemoRoutingModule {}\r\n","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {OverlayPanelDemo} from './overlaypaneldemo';\r\nimport {OverlayPanelDemoRoutingModule} from './overlaypaneldemo-routing.module';\r\nimport {OverlayPanelModule} from '../../../components/overlaypanel/overlaypanel';\r\nimport {ButtonModule} from '../../../components/button/button';\r\nimport {TableModule} from '../../../components/table/table';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tOverlayPanelDemoRoutingModule,\r\n        OverlayPanelModule,\r\n        ButtonModule,\r\n        TableModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tOverlayPanelDemo\r\n\t]\r\n})\r\nexport class OverlayPanelDemoModule {}\r\n","import {Component} from '@angular/core';\r\nimport {OverlayPanel} from '../../../components/overlaypanel/overlaypanel';\r\nimport {Car} from '../../components/domain/car';\r\nimport {CarService} from '../../service/carservice';\r\n\r\n@Component({\r\n    templateUrl: './overlaypaneldemo.html'\r\n})\r\nexport class OverlayPanelDemo {\r\n\r\n    cars1: Car[];\r\n    \r\n    cars2: Car[];\r\n    \r\n    selectedCar: Car;\r\n    \r\n    constructor(private carService: CarService) { }\r\n\r\n    ngOnInit() {\r\n        this.carService.getCarsSmall().then(cars => this.cars1 = cars);\r\n        this.carService.getCarsSmall().then(cars => this.cars2 = cars);\r\n    }\r\n    \r\n    selectCar(event,car: Car, overlaypanel: OverlayPanel) {\r\n        this.selectedCar = car;\r\n        overlaypanel.toggle(event);\r\n    }\r\n}"],"sourceRoot":""}