{"version":3,"sources":["webpack:///./src/app/components/common/api.ts","webpack:///./src/app/components/common/confirmationservice.ts","webpack:///./src/app/components/common/treedragdropservice.ts","webpack:///./src/app/components/dynamicdialog/dialogservice.ts","webpack:///./src/app/components/dynamicdialog/dynamicdialog-config.ts","webpack:///./src/app/components/dynamicdialog/dynamicdialog-injector.ts","webpack:///./src/app/components/dynamicdialog/dynamicdialog-ref.ts","webpack:///./src/app/components/dynamicdialog/dynamicdialog.ts","webpack:///./src/app/components/dynamicdialog/dynamicdialogcontent.ts"],"names":[],"mappings":"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","file":"default~components-confirmdialog-confirmdialogdemo-module~components-dynamicdialog-dynamicdialogdemo~9110c38f-es2015.js","sourcesContent":["export { DomHandler } from '../dom/domhandler';\r\nexport { TreeNode } from './treenode';\r\nexport { TreeDragDropService } from './treedragdropservice';\r\nexport { TreeNodeDragEvent } from './treenodedragevent';\r\nexport { BlockableUI } from './blockableui';\r\nexport { Confirmation } from './confirmation';\r\nexport { ConfirmationService } from './confirmationservice';\r\nexport { FilterMetadata } from './filtermetadata';\r\nexport { LazyLoadEvent } from './lazyloadevent';\r\nexport { MenuItem } from './menuitem';\r\nexport { Message } from './message';\r\nexport { MessageService } from './messageservice';\r\nexport { SelectItem } from './selectitem';\r\nexport { SelectItemGroup } from './selectitemgroup';\r\nexport { SortMeta } from './sortmeta';\r\nexport { SortEvent } from './sortevent';\r\nexport { DialogService } from '../dynamicdialog/dialogservice';\r\nexport { DynamicDialogConfig } from '../dynamicdialog/dynamicdialog-config';\r\nexport { DynamicDialogRef } from '../dynamicdialog/dynamicdialog-ref';\r\nexport { FilterUtils } from '../utils/filterutils';","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Confirmation } from './confirmation';\r\n\r\n@Injectable()\r\nexport class ConfirmationService {\r\n\r\n    private requireConfirmationSource = new Subject<Confirmation>();\r\n    private acceptConfirmationSource = new Subject<Confirmation>();\r\n\r\n    requireConfirmation$ = this.requireConfirmationSource.asObservable();\r\n    accept = this.acceptConfirmationSource.asObservable();\r\n\r\n    confirm(confirmation: Confirmation) {\r\n        this.requireConfirmationSource.next(confirmation);\r\n        return this;\r\n    }\r\n\r\n    onAccept() {\r\n        this.acceptConfirmationSource.next();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { TreeNodeDragEvent } from './treenodedragevent';\r\n\r\n@Injectable()\r\nexport class TreeDragDropService {\r\n    \r\n    private dragStartSource = new Subject<TreeNodeDragEvent>();\r\n    private dragStopSource = new Subject<TreeNodeDragEvent>();\r\n    \r\n    dragStart$ = this.dragStartSource.asObservable();\r\n    dragStop$ = this.dragStopSource.asObservable();\r\n    \r\n    startDrag(event: TreeNodeDragEvent) {\r\n        this.dragStartSource.next(event);\r\n    }\r\n    \r\n    stopDrag(event: TreeNodeDragEvent) {\r\n        this.dragStopSource.next(event);\r\n    }\r\n}","import { Injectable, ComponentFactoryResolver, ApplicationRef, Injector, Type, EmbeddedViewRef, ComponentRef } from '@angular/core';\r\nimport { DynamicDialogComponent } from './dynamicdialog';\r\nimport { DynamicDialogInjector } from './dynamicdialog-injector';\r\nimport { DynamicDialogConfig } from './dynamicdialog-config';\r\nimport { DynamicDialogRef } from './dynamicdialog-ref';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n    \r\n    dialogComponentRef: ComponentRef<DynamicDialogComponent>;\r\n\r\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private appRef: ApplicationRef, private injector: Injector) { }\r\n\r\n    public open(componentType: Type<any>, config: DynamicDialogConfig) {\r\n        const dialogRef = this.appendDialogComponentToBody(config);\r\n\r\n        this.dialogComponentRef.instance.childComponentType = componentType;\r\n\r\n        return dialogRef;\r\n    }\r\n\r\n    private appendDialogComponentToBody(config: DynamicDialogConfig) {\r\n        const map = new WeakMap();\r\n        map.set(DynamicDialogConfig, config);\r\n\r\n        const dialogRef = new DynamicDialogRef();\r\n        map.set(DynamicDialogRef, dialogRef);\r\n\r\n        const sub = dialogRef.onClose.subscribe(() => {\r\n            this.removeDialogComponentFromBody();\r\n            sub.unsubscribe();\r\n        });\r\n\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(DynamicDialogComponent);\r\n        const componentRef = componentFactory.create(new DynamicDialogInjector(this.injector, map));\r\n\r\n        this.appRef.attachView(componentRef.hostView);\r\n\r\n        const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n        document.body.appendChild(domElem);\r\n\r\n        this.dialogComponentRef = componentRef;\r\n\r\n        return dialogRef;\r\n    }\r\n\r\n    private removeDialogComponentFromBody() {\r\n        this.appRef.detachView(this.dialogComponentRef.hostView);\r\n        this.dialogComponentRef.destroy();\r\n    }\r\n}\r\n","export class DynamicDialogConfig {\r\n\tdata?: any;\r\n\theader?: string;\r\n\tfooter?: string;\r\n\twidth?: string;\r\n\theight?: string;\r\n\tcloseOnEscape?: boolean;\r\n\tbaseZIndex?: number;\r\n\tautoZIndex?: boolean;\r\n\tdismissableMask?: boolean;\r\n\trtl?: boolean;\r\n\tstyle?: any;\r\n\tcontentStyle?: any;\r\n\tstyleClass?: string;\r\n\ttransitionOptions?: string;\r\n\tclosable?: boolean;\r\n\tshowHeader?: boolean;\r\n}\r\n","import { Injector, Type, InjectionToken, InjectFlags } from '@angular/core';\r\n\r\nexport class DynamicDialogInjector implements Injector {\r\n\t\r\n\tconstructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) { }\r\n\r\n\tget<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\r\n\tget(token: any, notFoundValue?: any);\r\n\tget(token: any, notFoundValue?: any, flags?: any) {\r\n\t\tconst value = this._additionalTokens.get(token);\r\n\r\n\t\tif (value) return value;\r\n\r\n\t\treturn this._parentInjector.get<any>(token, notFoundValue);\r\n\t}\r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\n\r\nexport class DynamicDialogRef {\r\n\tconstructor() { }\r\n\r\n\tclose(result?: any) {\r\n\t\tthis._onClose.next(result);\r\n\t}\r\n\r\n\tprivate readonly _onClose = new Subject<any>();\r\n\tonClose: Observable<any> = this._onClose.asObservable();\r\n}\r\n","import { Component, NgModule, Type, ComponentFactoryResolver, ViewChild, OnDestroy, ComponentRef, AfterViewInit, ChangeDetectorRef, Renderer2, NgZone, ElementRef } from '@angular/core';\r\nimport { trigger,state,style,transition,animate,AnimationEvent } from '@angular/animations';\r\nimport { DynamicDialogContent } from './dynamicdialogcontent';\r\nimport { DynamicDialogConfig } from './dynamicdialog-config';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DomHandler } from '../dom/domhandler';\r\nimport { DynamicDialogRef } from './dynamicdialog-ref';\r\n\r\n@Component({\r\n\tselector: 'p-dynamicDialog',\r\n\ttemplate: `\r\n\t\t<div #mask class=\"ui-widget-overlay ui-dialog-mask ui-dialog-mask-scrollblocker\" *ngIf=\"visible\" (click)=\"onMaskClick()\"></div>\r\n\t\t<div [ngClass]=\"{'ui-dialog ui-dynamicdialog ui-widget ui-widget-content ui-corner-all ui-shadow':true, 'ui-dialog-rtl': config.rtl}\" [ngStyle]=\"config.style\" [class]=\"config.styleClass\"\r\n\t\t\t[@animation]=\"{value: 'visible', params: {transitionParams: config.transitionOptions || '150ms cubic-bezier(0, 0, 0.2, 1)'}}\" \r\n\t\t\t(@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" role=\"dialog\" *ngIf=\"visible\"\r\n\t\t\t[style.width]=\"config.width\" [style.height]=\"config.height\">\r\n            <div class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\" *ngIf=\"config.showHeader === false ? false: true\">\r\n                <span class=\"ui-dialog-title\">{{config.header}}</span>\r\n                <a [ngClass]=\"'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all'\" tabindex=\"0\" role=\"button\" (click)=\"close()\" (keydown.enter)=\"close()\" *ngIf=\"config.closable === false ? false : true\">\r\n                    <span class=\"pi pi-times\"></span>\r\n                </a>\r\n            </div>\r\n            <div class=\"ui-dialog-content ui-widget-content\" [ngStyle]=\"config.contentStyle\">\r\n\t\t\t\t<ng-template pDynamicDialogContent></ng-template>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"config.footer\">\r\n\t\t\t\t{{config.footer}}\r\n            </div>\r\n\t\t</div>\r\n\t`,\r\n\tanimations: [\r\n        trigger('animation', [\r\n            state('void', style({\r\n                transform: 'translateX(-50%) translateY(-50%) scale(0.7)',\r\n                opacity: 0\r\n            })),\r\n            state('visible', style({\r\n                transform: 'translateX(-50%) translateY(-50%) scale(1)',\r\n                opacity: 1\r\n            })),\r\n            transition('* => *', animate('{{transitionParams}}'))\r\n        ])\r\n\t]\r\n})\r\nexport class DynamicDialogComponent implements AfterViewInit, OnDestroy {\r\n\r\n\tvisible: boolean = true;\r\n\r\n\tcomponentRef: ComponentRef<any>;\r\n\r\n\tmask: HTMLDivElement;\r\n\r\n\t@ViewChild(DynamicDialogContent, { static: false }) insertionPoint: DynamicDialogContent;\r\n\t\r\n\t@ViewChild('mask', { static: false }) maskViewChild: ElementRef;\r\n\r\n\tchildComponentType: Type<any>;\r\n\r\n\tcontainer: HTMLDivElement;\r\n\r\n\tdocumentEscapeListener: Function;\r\n\r\n\tconstructor(private componentFactoryResolver: ComponentFactoryResolver, private cd: ChangeDetectorRef, public renderer: Renderer2,\r\n\t\t\tpublic config: DynamicDialogConfig, private dialogRef: DynamicDialogRef, public zone: NgZone) { }\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.loadChildComponent(this.childComponentType);\r\n\t\tthis.cd.detectChanges();\r\n\t}\r\n\r\n\tonOverlayClicked(evt: MouseEvent) {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n\tonDialogClicked(evt: MouseEvent) {\r\n\t\tevt.stopPropagation();\r\n\t}\r\n\r\n\tloadChildComponent(componentType: Type<any>) {\r\n\t\tlet componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\r\n\r\n\t\tlet viewContainerRef = this.insertionPoint.viewContainerRef;\r\n\t\tviewContainerRef.clear();\r\n\r\n\t\tthis.componentRef = viewContainerRef.createComponent(componentFactory);\r\n\t}\r\n\t\r\n\tmoveOnTop() {\r\n        if (this.config.autoZIndex !== false) {\r\n\t\t\tconst zIndex = this.config.baseZIndex||0 + (++DomHandler.zindex);\r\n\t\t\tthis.container.style.zIndex = String(zIndex);\r\n\t\t\tthis.maskViewChild.nativeElement.style.zIndex = String(zIndex - 1);\r\n\t\t}\r\n    }\r\n\r\n\tonAnimationStart(event: AnimationEvent) {\r\n\t\tswitch(event.toState) {\r\n\t\t\tcase 'visible':\r\n\t\t\t\tthis.container = event.element;\r\n\t\t\t\tthis.moveOnTop();\r\n\t\t\t\tthis.bindGlobalListeners();\r\n\t\t\t\tDomHandler.addClass(document.body, 'ui-overflow-hidden');\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'void':\r\n\t\t\t\tthis.onContainerDestroy();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\tonAnimationEnd(event: AnimationEvent) {\r\n\t\tif (event.toState === 'void') {\r\n\t\t\tthis.dialogRef.close();\r\n\t\t}\r\n\t}\r\n\r\n\tonContainerDestroy() {\r\n\t\tDomHandler.removeClass(document.body, 'ui-overflow-hidden');\r\n\t\tthis.unbindGlobalListeners();\r\n\t\tthis.container = null;\r\n\t}\r\n\t    \r\n\tclose() {\r\n\t\tthis.visible = false;\r\n\t}\r\n\r\n\tonMaskClick() {\r\n\t\tif (this.config.dismissableMask) {\r\n\t\t\tthis.close();\r\n\t\t}\r\n\t}\r\n\r\n\tbindGlobalListeners() {\r\n        if (this.config.closeOnEscape !== false && this.config.closable !== false) {\r\n            this.bindDocumentEscapeListener();\r\n        }\r\n    }\r\n    \r\n    unbindGlobalListeners() {\r\n        this.unbindDocumentEscapeListener();\r\n\t}\r\n\t\r\n\tbindDocumentEscapeListener() {\r\n        this.documentEscapeListener = this.renderer.listen('document', 'keydown', (event) => {\r\n            if (event.which == 27) {\r\n                if (parseInt(this.container.style.zIndex) == DomHandler.zindex) {\r\n\t\t\t\t\tthis.close();\r\n\t\t\t\t}\r\n            }\r\n        });\r\n    }\r\n    \r\n    unbindDocumentEscapeListener() {\r\n        if(this.documentEscapeListener) {\r\n            this.documentEscapeListener();\r\n            this.documentEscapeListener = null;\r\n        }\r\n    }\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.onContainerDestroy();\r\n\r\n\t\tif (this.componentRef) {\r\n\t\t\tthis.componentRef.destroy();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [CommonModule],\r\n\tdeclarations: [DynamicDialogComponent, DynamicDialogContent],\r\n\tentryComponents: [DynamicDialogComponent]\r\n})\r\nexport class DynamicDialogModule { }","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[pDynamicDialogContent]'\r\n})\r\nexport class DynamicDialogContent {\r\n  \r\n\tconstructor(public viewContainerRef: ViewContainerRef) {}\r\n\r\n}\r\n"],"sourceRoot":""}