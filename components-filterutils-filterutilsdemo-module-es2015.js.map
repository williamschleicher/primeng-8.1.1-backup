{"version":3,"sources":["webpack:///./src/app/showcase/components/filterutils/filterutilsdemo.html","webpack:///./src/app/showcase/components/filterutils/filterutils-routing.module.ts","webpack:///./src/app/showcase/components/filterutils/filterutilsdemo.module.ts","webpack:///./src/app/showcase/components/filterutils/filterutilsdemo.ts"],"names":[],"mappings":"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","file":"components-filterutils-filterutilsdemo-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">FilterUtils</span>\\r\\n        <span>FilterUtils is a helper to filter collections against constraints. Examples below demonstrate use-cases with AutoComplete and DataTable.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation ui-fluid\\\">\\r\\n    <h3>Basic</h3>\\r\\n    <p-autoComplete [(ngModel)]=\\\"brand\\\" [suggestions]=\\\"filteredBrands\\\" (completeMethod)=\\\"filterWithContains($event)\\\" [size]=\\\"30\\\"\\r\\n    [minLength]=\\\"1\\\" placeholder=\\\"Hint: type 'a' or 'o'\\\" [dropdown]=\\\"true\\\" field=\\\"label\\\" [style]=\\\"{'width':'250px'}\\\">\\r\\n        <ng-template let-brand pTemplate=\\\"item\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\">\\r\\n                <img src=\\\"assets/showcase/images/demo/car/{{brand.value}}.png\\\" style=\\\"width:32px;display:inline-block;margin:5px 0 2px 5px\\\"/>\\r\\n                <div style=\\\"font-size:18px;float:right;margin:10px 10px 0 0\\\">{{brand.value}}</div>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </p-autoComplete>\\r\\n    \\r\\n    <h3>Custom</h3>\\r\\n    <p-table #dt [columns]=\\\"cols\\\" [value]=\\\"cars\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n            <tr>\\r\\n                <th *ngFor=\\\"let col of columns\\\">\\r\\n                    {{col.header}}\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                    <input *ngSwitchCase=\\\"'vin'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\r\\n                    <input *ngSwitchCase=\\\"'year'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\r\\n                    <input *ngSwitchCase=\\\"'brand'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\r\\n                    <input *ngSwitchCase=\\\"'color'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\r\\n                </th>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n            <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n                <td *ngFor=\\\"let col of columns\\\">\\r\\n                    {{rowData[col.field]}}\\r\\n                </td>\\r\\n            </tr>\\r\\n        </ng-template>\\r\\n    </p-table>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;FilterUtils&#125; from 'primeng/api';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>FilterUtils consists of static functions that implement various constraints.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nconst value = 'PrimeNG';\\r\\n\\r\\nFilterUtils.equals(value, 'NG');                            //false\\r\\nFilterUtils.equals(value, 8);                               //false\\r\\nFilterUtils.equals(value, new Date());                      //false\\r\\nFilterUtils.contains(value, 'NG');                          //true\\r\\nFilterUtils.startsWith(value, 'NG');                        //false\\r\\nFilterUtils.endsWith(value, 'NG');                          //true\\r\\nFilterUtils.lt(10, 20);                                     //true\\r\\nFilterUtils.gte(50, 20);                                    //true\\r\\nFilterUtils.in(value, ['PrimeFaces', 'PrimeNG']);           //true\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Custom Constraint</h3>\\r\\n            <p>FilterUtils can be extended by adding new constraints.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nFilterUtils['isPrimeNumber'] = (value): boolean => &#123;\\r\\n    for(var i = 2; i &lt; num; i++)\\r\\n        if(num % i === 0) return false;\\r\\n    return num > 1;\\r\\n&#125;\\r\\n\\r\\nFilterUtils['isPrimeNumber'](3);                      //true\\r\\nFilterUtils['isPrimeNumber'](5);                      //true\\r\\nFilterUtils['isPrimeNumber'](568985673);              //false\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>FilterUtils API</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>startsWith</td>\\r\\n                            <td>value: Value to filter<br />\\r\\n                                filter: Filter value</td>\\r\\n                            <td>Whether the value starts with the filter value</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>contains</td>\\r\\n                            <td>value: Value to filter<br />\\r\\n                                filter: Filter value</td>\\r\\n                            <td>Whether the value contains the filter value</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>endsWith</td>\\r\\n                            <td>value: Value to filter<br />\\r\\n                                filter: Filter value</td>\\r\\n                            <td>Whether the value ends with the filter value</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>equals</td>\\r\\n                            <td>value: Value to filter<br />\\r\\n                                filter: Filter value</td>\\r\\n                            <td>Whether the value equals the filter value</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>notEquals</td>\\r\\n                            <td>value: Value to filter<br />\\r\\n                                filter: Filter value</td>\\r\\n                            <td>Whether the value does not equal the filter value</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>in</td>\\r\\n                            <td>value: Value to filter<br />\\r\\n                                filter[]: An array of filter values</td>\\r\\n                            <td>Whether the value contains the filter value</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>lt</td>\\r\\n                            <td>value: Value to filter<br />\\r\\n                                filter: Filter value</td>\\r\\n                            <td>Whether the value is less than the filter value</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>lte</td>\\r\\n                            <td>value: Value to filter<br />\\r\\n                                filter: Filter value</td>\\r\\n                            <td>Whether the value is less than or equals to the filter value</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>gt</td>\\r\\n                            <td>value: Value to filter<br />\\r\\n                                filter: Filter value</td>\\r\\n                            <td>Whether the value is greater than the filter value</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>gte</td>\\r\\n                            <td>value: Value to filter<br />\\r\\n                                filter: Filter value</td>\\r\\n                            <td>Whether the value is greater than or equals to the filter value</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>filter</td>\\r\\n                            <td>value[]: An array of values to filter<br />\\r\\n                                fields[]: An array of properties in the value object<br />\\r\\n                                filterValue: Filter value<br />\\r\\n                                filterMatchMode: Constraint</td>\\r\\n                            <td>Whether the property values of the given value collection matches the filter.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>            \\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/menu\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;h3&gt;Basic&lt;/h3&gt;\\r\\n&lt;p-autoComplete [(ngModel)]=\\\"brand\\\" [suggestions]=\\\"filteredBrands\\\" (completeMethod)=\\\"filterWithContains($event)\\\" [size]=\\\"30\\\"\\r\\n[minLength]=\\\"1\\\" placeholder=\\\"Hint: type 'a' or 'o'\\\" [dropdown]=\\\"true\\\" field=\\\"label\\\" [style]=\\\"&#123;'width':'250px'&#125;\\\"&gt;\\r\\n    &lt;ng-template let-brand pTemplate=\\\"item\\\"&gt;\\r\\n        &lt;div class=\\\"ui-helper-clearfix\\\"&gt;\\r\\n            &lt;img src=\\\"assets/showcase/images/demo/car/&#123;&#123;brand.value&#125;&#125;.png\\\" style=\\\"width:32px;display:inline-block;margin:5px 0 2px 5px\\\"/&gt;\\r\\n            &lt;div style=\\\"font-size:18px;float:right;margin:10px 10px 0 0\\\"&gt;&#123;&#123;brand.value&#125;&#125;&lt;/div&gt;\\r\\n        &lt;/div&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n&lt;/p-autoComplete&gt;\\r\\n\\r\\n&lt;h3&gt;Custom&lt;/h3&gt;\\r\\n&lt;p-table #dt [columns]=\\\"cols\\\" [value]=\\\"cars\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"&gt;\\r\\n    &lt;ng-template pTemplate=\\\"header\\\" let-columns&gt;\\r\\n        &lt;tr&gt;\\r\\n            &lt;th *ngFor=\\\"let col of columns\\\"&gt;\\r\\n                &#123;&#123;col.header&#125;&#125;\\r\\n            &lt;/th&gt;\\r\\n        &lt;/tr&gt;\\r\\n        &lt;tr&gt;\\r\\n            &lt;th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\"&gt;\\r\\n                &lt;input *ngSwitchCase=\\\"'vin'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\"&gt;\\r\\n                &lt;input *ngSwitchCase=\\\"'year'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\"&gt;\\r\\n                &lt;input *ngSwitchCase=\\\"'brand'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\"&gt;\\r\\n                &lt;input *ngSwitchCase=\\\"'color'\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\"&gt;\\r\\n            &lt;/th&gt;\\r\\n        &lt;/tr&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n    &lt;ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\"&gt;\\r\\n        &lt;tr [pSelectableRow]=\\\"rowData\\\"&gt;\\r\\n            &lt;td *ngFor=\\\"let col of columns\\\"&gt;\\r\\n                &#123;&#123;rowData[col.field]&#125;&#125;\\r\\n            &lt;/td&gt;\\r\\n        &lt;/tr&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n&lt;/p-table&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class FilterUtilsDemo &#123;\\r\\n\\r\\n    brands: any[] = [\\r\\n        &#123;label: 'Audi', value: 'Audi'&#125;,\\r\\n        &#123;label: 'BMW', value: 'BMW'&#125;,\\r\\n        &#123;label: 'Fiat', value: 'Fiat'&#125;,\\r\\n        &#123;label: 'Ford', value: 'Ford'&#125;,\\r\\n        &#123;label: 'Honda', value: 'Honda'&#125;,\\r\\n        &#123;label: 'Jaguar', value: 'Jaguar'&#125;,\\r\\n        &#123;label: 'Mercedes', value: 'Mercedes'&#125;,\\r\\n        &#123;label: 'Renault', value: 'Renault'&#125;,\\r\\n        &#123;label: 'VW', value: 'VW'&#125;,\\r\\n        &#123;label: 'Volvo', value: 'Volvo'&#125;\\r\\n    ];\\r\\n\\r\\n    filteredBrands: any[];\\r\\n\\r\\n    brand:any;\\r\\n\\r\\n    cars: Car[];\\r\\n\\r\\n    cols: any[];\\r\\n\\r\\n    constructor(private carService:CarService) &#123;\\r\\n        FilterUtils['custom-equals'] = (value, filter): boolean => &#123;\\r\\n            if (filter === undefined || filter === null || filter.trim() === '') &#123;\\r\\n                return true;\\r\\n            &#125;\\r\\n    \\r\\n            if (value === undefined || value === null) &#123;\\r\\n                return false;\\r\\n            &#125;\\r\\n            \\r\\n            return value.toString() === filter.toString();\\r\\n        &#125;\\r\\n\\r\\n        this.cols = [\\r\\n            &#123; field: 'year', header: 'Year', filterMatchMode:'custom-equals' &#125;,\\r\\n            &#123; field: 'brand', header: 'Brand', filterMatchMode:'custom-equals' &#125;,\\r\\n            &#123; field: 'color', header: 'Color', filterMatchMode:'custom-equals' &#125;,\\r\\n            &#123; field: 'vin', header: 'Vin', filterMatchMode:'custom-equals' &#125;\\r\\n        ];\\r\\n\\r\\n        this.carService.getCarsMedium().then(cars => this.cars = cars);\\r\\n    &#125;\\r\\n\\r\\n    filterWithContains(event) &#123;\\r\\n        this.filteredBrands = FilterUtils.filter(this.brands, ['value'], event.query, \\\"contains\\\");\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\"","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport { FilterUtilsDemo } from './filterutilsdemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: FilterUtilsDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class FilterUtilsDemoRoutingModule {}\r\n","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {ButtonModule} from '../../../components/button/button';;\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\nimport { FilterUtilsDemo } from './filterutilsdemo';\r\nimport { FilterUtilsDemoRoutingModule } from './filterutils-routing.module';\r\nimport { AutoCompleteModule } from '../../../components/autocomplete/autocomplete';\r\nimport { TableModule } from '../../../components/table/table';\r\nimport { InputTextModule } from 'src/app/components/inputtext/inputtext';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFilterUtilsDemoRoutingModule,\r\n        ButtonModule,\r\n        TabViewModule,\r\n\t\tCodeHighlighterModule,\r\n\t\tAutoCompleteModule,\r\n\t\tFormsModule,\r\n\t\tTableModule,\r\n\t\tInputTextModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tFilterUtilsDemo\r\n\t]\r\n})\r\nexport class FilterUtilsDemoModule {}\r\n","import { Component } from '@angular/core';\r\nimport { FilterUtils } from '../../../components/utils/filterutils';\r\nimport { CarService } from '../../service/carservice';\r\nimport { Car } from '../../domain/car';\r\n\r\n@Component({\r\n    templateUrl: './filterutilsdemo.html'\r\n})\r\nexport class FilterUtilsDemo {\r\n\r\n    brands: any[] = [\r\n        {label: 'Audi', value: 'Audi'},\r\n        {label: 'BMW', value: 'BMW'},\r\n        {label: 'Fiat', value: 'Fiat'},\r\n        {label: 'Ford', value: 'Ford'},\r\n        {label: 'Honda', value: 'Honda'},\r\n        {label: 'Jaguar', value: 'Jaguar'},\r\n        {label: 'Mercedes', value: 'Mercedes'},\r\n        {label: 'Renault', value: 'Renault'},\r\n        {label: 'VW', value: 'VW'},\r\n        {label: 'Volvo', value: 'Volvo'}\r\n    ];\r\n\r\n    filteredBrands: any[];\r\n\r\n    brand:any;\r\n\r\n    cars: Car[];\r\n\r\n    cols: any[];\r\n\r\n    constructor(private carService:CarService) {\r\n        FilterUtils['custom-equals'] = (value, filter): boolean => {\r\n            if (filter === undefined || filter === null || filter.trim() === '') {\r\n                return true;\r\n            }\r\n    \r\n            if (value === undefined || value === null) {\r\n                return false;\r\n            }\r\n            \r\n            return value.toString() === filter.toString();\r\n        }\r\n\r\n        this.cols = [\r\n            { field: 'year', header: 'Year', filterMatchMode:'custom-equals' },\r\n            { field: 'brand', header: 'Brand', filterMatchMode:'custom-equals' },\r\n            { field: 'color', header: 'Color', filterMatchMode:'custom-equals' },\r\n            { field: 'vin', header: 'Vin', filterMatchMode:'custom-equals' }\r\n        ];\r\n\r\n        this.carService.getCarsMedium().then(cars => this.cars = cars);\r\n    }\r\n\r\n    filterWithContains(event) {\r\n        this.filteredBrands = FilterUtils.filter(this.brands, ['value'], event.query, \"contains\");\r\n    }\r\n}"],"sourceRoot":""}