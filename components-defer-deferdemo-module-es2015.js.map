{"version":3,"sources":["webpack:///./src/app/showcase/components/defer/deferdemo.html","webpack:///./src/app/components/defer/defer.ts","webpack:///./src/app/showcase/components/defer/deferdemo-routing.module.ts","webpack:///./src/app/showcase/components/defer/deferdemo.module.ts","webpack:///./src/app/showcase/components/defer/deferdemo.ts"],"names":[],"mappings":"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","file":"components-defer-deferdemo-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">Defer</span>\\r\\n        <span>Defer directive postpones the loading the content that is initially not in viewport until it becomes visible on scroll. Think of\\r\\n        pDefer as a smart ngIf that lazily loads content when it becomes visible after page scroll. Scroll down to load the Table\\r\\n        which initiates a query that is not executed on initial page load to speed up load performance.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <div style=\\\"height:800px\\\">\\r\\n        Table is not loaded yet, scroll down to initialize it.\\r\\n    </div>\\r\\n\\r\\n    <p-toast [style]=\\\"{marginTop: '80px'}\\\"></p-toast>\\r\\n\\r\\n    <div pDefer (onLoad)=\\\"initData()\\\">\\r\\n        <ng-template>\\r\\n            <p-table [value]=\\\"cars\\\">\\r\\n                <ng-template pTemplate=\\\"header\\\">\\r\\n                    <tr>\\r\\n                        <th>Vin</th>\\r\\n                        <th>Year</th>\\r\\n                        <th>Brand</th>\\r\\n                        <th>Color</th>\\r\\n                    </tr>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"body\\\" let-car>\\r\\n                    <tr>\\r\\n                        <td>{{car.vin}}</td>\\r\\n                        <td>{{car.year}}</td>\\r\\n                        <td>{{car.brand}}</td>\\r\\n                        <td>{{car.color}}</td>\\r\\n                    </tr>\\r\\n                </ng-template>\\r\\n            </p-table>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n                    <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;DeferModule&#125; from 'primeng/defer';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>Defer is applied to a container element with pDefer directive where content needs to be placed inside an ng-template.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;div pDefer&gt;\\r\\n    &lt;ng-template&gt;\\r\\n       deferred content\\r\\n   &lt;/ng-template&gt;\\r\\n&lt;/div&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Callback</h3>\\r\\n            <p>onLoad callback is useful to initialize the content when it becomes visible on scroll such as loading data.</p>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;div pDefer (onLoad)=\\\"initData()\\\"&gt;\\r\\n    &lt;ng-template&gt;\\r\\n        &lt;p-table [value]=\\\"cars\\\"&gt;\\r\\n        &lt;ng-template pTemplate=\\\"header\\\"&gt;\\r\\n            &lt;tr&gt;\\r\\n                &lt;th&gt;Vin&lt;/th&gt;\\r\\n                &lt;th&gt;Year&lt;/th&gt;\\r\\n                &lt;th&gt;Brand&lt;/th&gt;\\r\\n                &lt;th&gt;Color&lt;/th&gt;\\r\\n            &lt;/tr&gt;\\r\\n        &lt;/ng-template&gt;\\r\\n        &lt;ng-template pTemplate=\\\"body\\\" let-car&gt;\\r\\n            &lt;tr&gt;\\r\\n                &lt;td&gt;&#123;&#123;car.vin&#125;&#125;&lt;/td&gt;\\r\\n                &lt;td&gt;&#123;&#123;car.year&#125;&#125;&lt;/td&gt;\\r\\n                &lt;td&gt;&#123;&#123;car.brand&#125;&#125;&lt;/td&gt;\\r\\n                &lt;td&gt;&#123;&#123;car.color&#125;&#125;&lt;/td&gt;\\r\\n            &lt;/tr&gt;\\r\\n        &lt;/ng-template&gt;\\r\\n    &lt;/p-table&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n&lt;/div&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nthis.cars = //initialize\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Properties</h3>\\r\\n            <p>Directive has no attributes.</p>\\r\\n\\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>onLoad</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Callback to invoke when deferred content is loaded.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Directive does not apply any styling to host.</p>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/defer\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;div pDefer (onLoad)=\\\"initData()\\\"&gt;\\r\\n    &lt;ng-template&gt;\\r\\n        &lt;p-table [value]=\\\"cars\\\"&gt;\\r\\n            &lt;ng-template pTemplate=\\\"header\\\"&gt;\\r\\n                &lt;tr&gt;\\r\\n                    &lt;th&gt;Vin&lt;/th&gt;\\r\\n                    &lt;th&gt;Year&lt;/th&gt;\\r\\n                    &lt;th&gt;Brand&lt;/th&gt;\\r\\n                    &lt;th&gt;Color&lt;/th&gt;\\r\\n                &lt;/tr&gt;\\r\\n            &lt;/ng-template&gt;\\r\\n            &lt;ng-template pTemplate=\\\"body\\\" let-car&gt;\\r\\n                &lt;tr&gt;\\r\\n                    &lt;td&gt;&#123;&#123;car.vin&#125;&#125;&lt;/td&gt;\\r\\n                    &lt;td&gt;&#123;&#123;car.year&#125;&#125;&lt;/td&gt;\\r\\n                    &lt;td&gt;&#123;&#123;car.brand&#125;&#125;&lt;/td&gt;\\r\\n                    &lt;td&gt;&#123;&#123;car.color&#125;&#125;&lt;/td&gt;\\r\\n                &lt;/tr&gt;\\r\\n            &lt;/ng-template&gt;\\r\\n        &lt;/p-table&gt;\\r\\n    &lt;/ng-template&gt;\\r\\n&lt;/div&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class DeferDemo &#123;\\r\\n\\r\\n    cars: Car[];\\r\\n\\r\\n    constructor(private carService: CarService, private messageService: MessageService)  &#123;&#125;\\r\\n\\r\\n    initData()  &#123;\\r\\n        this.messageService.add(&#123;severity:'success', summary:'Data Initialized', detail:'Render Completed'&#125;);\\r\\n        this.carService.getCarsSmall().then(cars => this.cars = cars);\\r\\n     &#125;\\r\\n &#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n        </p-tabPanel>\\r\\n     </p-tabView>\\r\\n</div>\\r\\n\"","import {NgModule,Directive,ElementRef,AfterViewInit,OnDestroy,Input,TemplateRef,EmbeddedViewRef,\r\n        ViewContainerRef,Renderer2,EventEmitter,Output,ContentChild} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n@Directive({\r\n    selector: '[pDefer]'\r\n})\r\nexport class DeferredLoader implements AfterViewInit,OnDestroy {\r\n        \r\n    @Output() onLoad: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @ContentChild(TemplateRef, { static: false }) template: TemplateRef<any>;\r\n        \r\n    documentScrollListener: Function;\r\n    \r\n    view: EmbeddedViewRef<any>;\r\n            \r\n    constructor(public el: ElementRef, public renderer: Renderer2, public viewContainer: ViewContainerRef) {}\r\n    \r\n    ngAfterViewInit() {\r\n        if (this.shouldLoad()) {\r\n            this.load();\r\n        }\r\n        \r\n        if (!this.isLoaded()) {\r\n            this.documentScrollListener = this.renderer.listen('window', 'scroll', () => {\r\n                if (this.shouldLoad()) {\r\n                    this.load();\r\n                    this.documentScrollListener();\r\n                    this.documentScrollListener = null;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    shouldLoad(): boolean {\r\n        if (this.isLoaded()) {\r\n            return false;\r\n        }\r\n        else {\r\n            let rect = this.el.nativeElement.getBoundingClientRect();\r\n            let docElement = document.documentElement;\r\n            let winHeight = docElement.clientHeight;\r\n            \r\n            return (winHeight >= rect.top);\r\n        }\r\n    }\r\n    \r\n    load(): void { \r\n        this.view = this.viewContainer.createEmbeddedView(this.template);\r\n        this.onLoad.emit();\r\n    }\r\n    \r\n    isLoaded() {\r\n        return this.view != null;\r\n    }\r\n            \r\n    ngOnDestroy() {\r\n        this.view = null;\r\n        \r\n        if (this.documentScrollListener) {\r\n            this.documentScrollListener();\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [DeferredLoader],\r\n    declarations: [DeferredLoader]\r\n})\r\nexport class DeferModule { }","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {DeferDemo} from './deferdemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: DeferDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class DeferDemoRoutingModule {}\r\n","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DeferDemo} from './deferdemo';\r\nimport {DeferDemoRoutingModule} from './deferdemo-routing.module';\r\nimport {DeferModule} from '../../../components/defer/defer';\r\nimport {TableModule} from '../../../components/table/table';\r\nimport {ToastModule} from '../../../components/toast/toast';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tDeferDemoRoutingModule,\r\n        DeferModule,\r\n        ToastModule,\r\n        TabViewModule,\r\n        TableModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tDeferDemo\r\n\t]\r\n})\r\nexport class DeferDemoModule {}\r\n","import {Component} from '@angular/core';\r\nimport {Car} from '../../components/domain/car';\r\nimport {CarService} from '../../service/carservice';\r\nimport {MessageService} from '../../../components/common/messageservice';\r\n\r\n@Component({\r\n    templateUrl: './deferdemo.html',\r\n    providers: [MessageService]\r\n})\r\nexport class DeferDemo {\r\n\r\n    cars: Car[];\r\n    \r\n    constructor(private carService: CarService, private messageService: MessageService) { }\r\n    \r\n    initData() {\r\n        this.messageService.add({severity:'success', summary:'Data Initialized', detail:'Render Completed'});\r\n        this.carService.getCarsSmall().then(cars => this.cars = cars);\r\n    }\r\n}\r\n"],"sourceRoot":""}