{"version":3,"sources":["webpack:///./src/app/showcase/components/slider/sliderdemo.html","webpack:///./src/app/showcase/components/slider/sliderdemo-routing.module.ts","webpack:///./src/app/showcase/components/slider/sliderdemo.module.ts","webpack:///./src/app/showcase/components/slider/sliderdemo.ts"],"names":[],"mappings":";;;;;;;;;AAAA,gVAAgV,MAAM,uDAAuD,eAAe,uCAAuC,MAAM,mJAAmJ,eAAe,yCAAyC,MAAM,uDAAuD,eAAe,yDAAyD,MAAM,uDAAuD,eAAe,qDAAqD,yCAAyC,8DAA8D,eAAe,2DAA2D,MAAM,uDAAuD,gBAAgB,+SAA+S,kBAAkB,uBAAuB,iOAAiO,gCAAgC,IAAI,aAAa,6HAA6H,wBAAwB,cAAc,sNAAsN,oCAAoC,IAAI,aAAa,8MAA8M,0DAA0D,IAAI,aAAa,yNAAyN,8CAA8C,IAAI,aAAa,oQAAoQ,yDAAyD,IAAI,aAAa,6HAA6H,kCAAkC,cAAc,4PAA4P,yDAAyD,IAAI,aAAa,k2JAAk2J,oEAAoE,IAAI,aAAa,wHAAwH,4CAA4C,28CAA28C,sBAAsB,SAAS,MAAM,IAAI,OAAO,QAAQ,8CAA8C,oBAAoB,MAAM,IAAI,aAAa,YAAY,MAAM,SAAS,MAAM,IAAI,OAAO,QAAQ,6EAA6E,QAAQ,8CAA8C,oBAAoB,MAAM,IAAI,aAAa,YAAY,MAAM,WAAW,MAAM,IAAI,OAAO,QAAQ,8CAA8C,oBAAoB,yBAAyB,IAAI,aAAa,YAAY,MAAM,QAAQ,MAAM,IAAI,OAAO,QAAQ,8CAA8C,oBAAoB,oBAAoB,IAAI,aAAa,YAAY,MAAM,SAAS,yCAAyC,IAAI,OAAO,QAAQ,qDAAqD,oBAAoB,uBAAuB,IAAI,aAAa,YAAY,MAAM,YAAY,MAAM,IAAI,OAAO,QAAQ,8CAA8C,qBAAqB,+BAA+B,IAAI,aAAa,gIAAgI,yBAAyB,8BAA8B,yBAAyB,yBAAyB,yBAAyB,4CAA4C,UAAU,iF;;;;;;;;;;;;;;;;;;;ACAt3W;AACC;AACJ;AAYxC;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAVnC,8DAAQ,CAAC;YACT,OAAO,EAAE;gBACR,4DAAY,CAAC,QAAQ,CAAC;oBACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAE,sDAAU,EAAC;iBAC/B,CAAC;aACF;YACD,OAAO,EAAE;gBACR,4DAAY;aACZ;SACD,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACdO;AACE;AACC;AACN;AAC4B;AACL;AACS;AACN;AACwB;AAgB1F;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAd5B,8DAAQ,CAAC;YACT,OAAO,EAAE;gBACR,4DAAY;gBACN,0DAAW;gBACjB,kFAAuB;gBACjB,sEAAY;gBACZ,+EAAe;gBACf,yEAAa;gBACb,iGAAqB;aAC3B;YACD,YAAY,EAAE;gBACb,sDAAU;aACV;SACD,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;ACxBW;AAKxC;IAHA;QAOI,SAAI,GAAW,EAAE,CAAC;QAQlB,gBAAW,GAAa,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAbY,UAAU;QAHtB,+DAAS,CAAC;YACP,4JAAgC;SACnC,CAAC;OACW,UAAU,CAatB;IAAD,iBAAC;CAAA;AAbsB","file":"components-slider-sliderdemo-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">Slider</span>\\r\\n        <span>Slider is a component to provide input using dragging of a handle.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <h3 class=\\\"first\\\">Basic: {{val1}}</h3>\\r\\n    <p-slider [(ngModel)]=\\\"val1\\\" [style]=\\\"{'width':'14em'}\\\"></p-slider>\\r\\n\\r\\n    <h3>Input: {{val2}}</h3>\\r\\n    <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"val2\\\" style=\\\"width:14em\\\" readonly/>\\r\\n    <p-slider [(ngModel)]=\\\"val2\\\" [style]=\\\"{'width':'14em'}\\\"></p-slider>\\r\\n\\r\\n    <h3>Animate: {{val3}}</h3>\\r\\n    <p-slider [(ngModel)]=\\\"val3\\\" [style]=\\\"{'width':'14em'}\\\" [animate]=\\\"true\\\"></p-slider>\\r\\n\\r\\n    <h3>Step: {{val4}}</h3>\\r\\n    <p-slider [(ngModel)]=\\\"val4\\\" [style]=\\\"{'width':'14em'}\\\" [step]=\\\"20\\\"></p-slider>\\r\\n\\r\\n    <h3>Range: {{rangeValues[0] + ' - ' + rangeValues[1]}}</h3>\\r\\n    <p-slider [(ngModel)]=\\\"rangeValues\\\" [style]=\\\"{'width':'14em'}\\\" [range]=\\\"true\\\"></p-slider>\\r\\n\\r\\n    <h3>Vertical: {{val5}}</h3>\\r\\n    <p-slider [(ngModel)]=\\\"val5\\\" [style]=\\\"{'height':'14em'}\\\" orientation=\\\"vertical\\\"></p-slider>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;SliderModule&#125; from 'primeng/slider';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>Two-way binding is defined using the standard ngModel directive.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-slider [(ngModel)]=\\\"val\\\"&gt;&lt;/p-slider&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class MyModel &#123;\\r\\n\\r\\n    val: number;\\r\\n\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Model Driven Forms</h3>\\r\\n            <p>Slider can be used in a model driven form as well.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-slider formControlName=\\\"age\\\"&gt;&lt;/p-slider&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Min-Max</h3>\\r\\n            <p>Boundaries are specified with min and max attributes.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-slider [(ngModel)]=\\\"val\\\" [min]=\\\"0\\\" [max]=\\\"100\\\"&gt;&lt;/p-slider&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Step</h3>\\r\\n            <p>Step factor is 1 by default and can be customized with step option.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-slider [(ngModel)]=\\\"val\\\" [step]=\\\"10\\\"&gt;&lt;/p-slider&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Range</h3>\\r\\n            <p>Range slider provides two handles to define two values. In this case, value binding should refer to an array.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-slider [(ngModel)]=\\\"rangeValues\\\" [range]=\\\"true\\\"&gt;&lt;/p-slider&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class MyModel &#123;\\r\\n\\r\\n    rangeValues: number[];\\r\\n\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Orientation</h3>\\r\\n            <p>Sliders supports two orientations, horizontal is the default and other alternative is vertical.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-slider [(ngModel)]=\\\"val\\\" orientation=\\\"vertical\\\"&gt;&lt;/p-slider&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>animate</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When enabled, displays an animation on click of the slider bar.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>disabled</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When present, it specifies that the element should be disabled.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>min</td>\\r\\n                            <td>number</td>\\r\\n                            <td>0</td>\\r\\n                            <td>Mininum boundary value.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>max</td>\\r\\n                            <td>number</td>\\r\\n                            <td>100</td>\\r\\n                            <td>Maximum boundary value.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>orientation</td>\\r\\n                            <td>string</td>\\r\\n                            <td>horizontal</td>\\r\\n                            <td>Orientation of the slider, valid values are horizontal and vertical.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>step</td>\\r\\n                            <td>number</td>\\r\\n                            <td>1</td>\\r\\n                            <td>Step factor to increment/decrement the value.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>range</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When speficed, allows two boundary values to be picked.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>tabindex</td>\\r\\n                            <td>number</td>\\r\\n                            <td>0</td>\\r\\n                            <td>Index of the element in tabbing order.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>onChange</td>\\r\\n                            <td>\\r\\n                                event.originalEvent: Slide event <br />\\r\\n                                event.value: New value <br />\\r\\n                                event.values: Values in range mode <br />\\r\\n                            </td>\\r\\n                            <td>Callback to invoke on value change via slide.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onSlideEnd</td>\\r\\n                            <td>\\r\\n                                event.originalEvent: Mouseup event<br />\\r\\n                                event.value: New value \\r\\n                            </td>\\r\\n                            <td>Callback to invoke when slide stops.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-slider [(ngModel)]=\\\"val\\\" (onChange)=\\\"handleChange($event)\\\"&gt;&lt;/p-slider&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nhandleChange(e) &#123;\\r\\n    //e.value is the new value\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-slider</td>\\r\\n                            <td>Container element</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-slider-handle</td>\\r\\n                            <td>Handle element</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/slider\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;h3 class=\\\"first\\\"&gt;Basic: {{val1}}&lt;/h3&gt;\\r\\n&lt;p-slider [(ngModel)]=\\\"val1\\\" [style]=\\\"&#123;'width':'14em'&#125;\\\"&gt;&lt;/p-slider&gt;\\r\\n\\r\\n&lt;h3&gt;Input: {{val2}}&lt;/h3&gt;\\r\\n&lt;input type=\\\"text\\\" pInputText [(ngModel)]=\\\"val2\\\" style=\\\"width:14em\\\"/&gt;\\r\\n&lt;p-slider [(ngModel)]=\\\"val2\\\" [style]=\\\"&#123;'width':'14em'&#125;\\\"&gt;&lt;/p-slider&gt;\\r\\n\\r\\n&lt;h3&gt;Animate: {{val3}}&lt;/h3&gt;\\r\\n&lt;p-slider [(ngModel)]=\\\"val3\\\" [style]=\\\"&#123;'width':'14em'&#125;\\\" [animate]=\\\"true\\\"&gt;&lt;/p-slider&gt;\\r\\n\\r\\n&lt;h3&gt;Step: {{val4}}&lt;/h3&gt;\\r\\n&lt;p-slider [(ngModel)]=\\\"val4\\\" [style]=\\\"&#123;'width':'14em'&#125;\\\" [step]=\\\"20\\\"&gt;&lt;/p-slider&gt;\\r\\n\\r\\n&lt;h3&gt;Range: {{rangeValues[0] + ' - ' + rangeValues[1]}}&lt;/h3&gt;\\r\\n&lt;p-slider [(ngModel)]=\\\"rangeValues\\\" [style]=\\\"&#123;'width':'14em'&#125;\\\" [range]=\\\"true\\\"&gt;&lt;/p-slider&gt;\\r\\n\\r\\n&lt;h3&gt;Vertical: {{val5}}&lt;/h3&gt;\\r\\n&lt;p-slider [(ngModel)]=\\\"val5\\\" [style]=\\\"&#123;'height':'14em'&#125;\\\" orientation=\\\"vertical\\\"&gt;&lt;/p-slider&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class SliderDemo &#123;\\r\\n\\r\\n    val1: number;\\r\\n\\r\\n    val2: number = 50;\\r\\n\\r\\n    val3: number;\\r\\n\\r\\n    val4: number;\\r\\n\\r\\n    val5: number;\\r\\n\\r\\n    rangeValues: number[] = [20,80];\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\\r\\n\"","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {SliderDemo} from './sliderdemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: SliderDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class SliderDemoRoutingModule {}\r\n","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule}    from '@angular/forms';\r\nimport {SliderDemo} from './sliderdemo';\r\nimport {SliderDemoRoutingModule} from './sliderdemo-routing.module';\r\nimport {SliderModule} from '../../../components/slider/slider';\r\nimport {InputTextModule} from '../../../components/inputtext/inputtext';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n        FormsModule,\r\n\t\tSliderDemoRoutingModule,\r\n        SliderModule,\r\n        InputTextModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tSliderDemo\r\n\t]\r\n})\r\nexport class SliderDemoModule {}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './sliderdemo.html'\r\n})\r\nexport class SliderDemo {\r\n\r\n    val1: number;\r\n\r\n    val2: number = 50;\r\n\r\n    val3: number;\r\n\r\n    val4: number;\r\n\r\n    val5: number;\r\n\r\n    rangeValues: number[] = [20,80];\r\n}"],"sourceRoot":""}