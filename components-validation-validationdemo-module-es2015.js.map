{"version":3,"sources":["webpack:///./src/app/showcase/components/validation/validationdemo.html","webpack:///./src/app/components/panel/panel.ts","webpack:///./src/app/showcase/components/validation/validationdemo-routing.module.ts","webpack:///./src/app/showcase/components/validation/validationdemo.module.ts","webpack:///./src/app/showcase/components/validation/validationdemo.ts"],"names":[],"mappings":"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","file":"components-validation-validationdemo-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">Validation</span>\\r\\n        <span>PrimeNG input components indicate validation errors automatically when their value is marked as invalid.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <p-toast [style]=\\\"{marginTop: '80px'}\\\"></p-toast>\\r\\n\\r\\n    <form [formGroup]=\\\"userform\\\" (ngSubmit)=\\\"onSubmit(userform.value)\\\">\\r\\n        <p-panel header=\\\"Validate\\\">\\r\\n            <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\r\\n                <div class=\\\"ui-grid-row\\\">\\r\\n                    <div class=\\\"ui-grid-col-2\\\">\\r\\n                        First Name *:\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-grid-col-6\\\">\\r\\n                        <input pInputText type=\\\"text\\\" formControlName=\\\"firstname\\\" placeholder=\\\"Required\\\"/>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-grid-col-4\\\">\\r\\n                        <p-message severity=\\\"error\\\" text=\\\"Firstname is required\\\" *ngIf=\\\"!userform.controls['firstname'].valid&&userform.controls['firstname'].dirty\\\"></p-message>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-grid-row\\\">\\r\\n                    <div class=\\\"ui-grid-col-2\\\">\\r\\n                        Last Name *:\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-grid-col-6\\\">\\r\\n                        <input pInputText type=\\\"text\\\" formControlName=\\\"lastname\\\" placeholder=\\\"Required\\\"/>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-grid-col-4\\\">\\r\\n                        <p-message severity=\\\"error\\\" text=\\\"Lastname is required\\\" *ngIf=\\\"!userform.controls['lastname'].valid&&userform.controls['lastname'].dirty\\\"></p-message>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-grid-row\\\">\\r\\n                    <div class=\\\"ui-grid-col-2\\\">\\r\\n                        Password *:\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-grid-col-6\\\">\\r\\n                        <input pInputText type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Required - Min(6)\\\"/>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-grid-col-4\\\">\\r\\n                        <p-message severity=\\\"error\\\" [text]=\\\"userform.controls['password'].errors['required'] ? 'Password is required' : userform.controls['password'].errors['minlength'] ? 'Must be longer than 6 characters' : ''\\\" \\r\\n                            *ngIf=\\\"!userform.controls['password'].valid&&userform.controls['password'].dirty\\\"></p-message>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-grid-row\\\">\\r\\n                    <div class=\\\"ui-grid-col-2\\\">\\r\\n                        Description:\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-grid-col-6\\\">\\r\\n                        <textarea pInputTextarea type=\\\"text\\\" formControlName=\\\"description\\\"></textarea>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-grid-row\\\">\\r\\n                    <div class=\\\"ui-grid-col-2\\\">\\r\\n                        Gender *:\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-grid-col-6\\\">\\r\\n                        <p-dropdown [options]=\\\"genders\\\" formControlName=\\\"gender\\\"></p-dropdown>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-grid-col-4\\\">\\r\\n                        <p-message severity=\\\"error\\\" text=\\\"Gender is required\\\" *ngIf=\\\"!userform.controls['gender'].valid&&userform.controls['gender'].dirty\\\"></p-message>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ui-grid-row\\\">\\r\\n                    <div class=\\\"ui-grid-col-2\\\"></div>\\r\\n                    <div class=\\\"ui-grid-col-6\\\">\\r\\n                        <button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"!userform.valid\\\"></button>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-grid-col-4\\\"></div>\\r\\n                </div>\\r\\n                <div style=\\\"text-align:center;margin-top:20px\\\" *ngIf=\\\"submitted\\\">\\r\\n                    Form Submitted\\r\\n                    <br>\\r\\n                    {{diagnostic}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </p-panel>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/validation\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n        <i class=\\\"fa fa-github\\\"></i>\\r\\n        <span>View on GitHub</span>\\r\\n    </a>\\r\\n\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"validationdemo.ts\\\">\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;Component,OnInit&#125; from '@angular/core';\\r\\nimport &#123;Validators,FormControl,FormGroup,FormBuilder&#125; from '@angular/forms';\\r\\nimport &#123;SelectItem&#125; from '../../../components/common/api';\\r\\nimport &#123;MessageService&#125; from 'primeng/api';\\r\\n\\r\\n@Component(&#123;\\r\\n    templateUrl: 'showcase/demo/validation/validationdemo.html',\\r\\n    providers: [MessageService]\\r\\n&#125;)\\r\\nexport class ValidationDemo implements OnInit &#123;\\r\\n\\r\\n    userform: FormGroup;\\r\\n\\r\\n    submitted: boolean;\\r\\n\\r\\n    genders: SelectItem[];\\r\\n\\r\\n    description: string;\\r\\n\\r\\n    constructor(private fb: FormBuilder, private messageService: MessageService) &#123;&#125;\\r\\n\\r\\n    ngOnInit() &#123;\\r\\n        this.userform = this.fb.group(&#123;\\r\\n            'firstname': new FormControl('', Validators.required),\\r\\n            'lastname': new FormControl('', Validators.required),\\r\\n            'password': new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)])),\\r\\n            'description': new FormControl(''),\\r\\n            'gender': new FormControl('', Validators.required)\\r\\n        &#125;);\\r\\n\\r\\n        this.genders = [];\\r\\n        this.genders.push(&#123;label:'Select Gender', value:''&#125;);\\r\\n        this.genders.push(&#123;label:'Male', value:'Male'&#125;);\\r\\n        this.genders.push(&#123;label:'Female', value:'Female'&#125;);\\r\\n    &#125;\\r\\n\\r\\n    onSubmit(value: string) &#123;\\r\\n        this.submitted = true;\\r\\n        this.messageService.add(&#123;severity:'info', summary:'Success', detail:'Form Submitted'&#125;);\\r\\n    &#125;\\r\\n\\r\\n    get diagnostic() &#123; return JSON.stringify(this.userform.value); &#125;\\r\\n\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"validationdemo.html\\\">\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-toast [style]=\\\"&#123;marginTop: '80px'&#125;\\\"&gt;&lt;/p-toast&gt;\\r\\n\\r\\n&lt;form [formGroup]=\\\"userform\\\" (ngSubmit)=\\\"onSubmit(userform.value)\\\"&gt;\\r\\n    &lt;p-panel header=\\\"Validate\\\"&gt;\\r\\n        &lt;div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\"&gt;\\r\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;\\r\\n                    First Name *:\\r\\n                &lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\r\\n                    &lt;input pInputText type=\\\"text\\\" formControlName=\\\"firstname\\\" placeholder=\\\"Required\\\"/&gt;\\r\\n                &lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;\\r\\n                    &lt;p-message severity=\\\"error\\\" text=\\\"Firstname is required\\\" *ngIf=\\\"!userform.controls['firstname'].valid&&userform.controls['firstname'].dirty\\\"&gt;&lt;/p-message&gt;\\r\\n                &lt;/div&gt;\\r\\n            &lt;/div&gt;\\r\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;\\r\\n                    Last Name *:\\r\\n                &lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\r\\n                    &lt;input pInputText type=\\\"text\\\" formControlName=\\\"lastname\\\" placeholder=\\\"Required\\\"/&gt;\\r\\n                &lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;\\r\\n                    &lt;p-message severity=\\\"error\\\" text=\\\"Lastname is required\\\" *ngIf=\\\"!userform.controls['lastname'].valid&&userform.controls['lastname'].dirty\\\"&gt;&lt;/p-message&gt;\\r\\n                &lt;/div&gt;\\r\\n            &lt;/div&gt;\\r\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;\\r\\n                    Password *:\\r\\n                &lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\r\\n                    &lt;input pInputText type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Required - Min(6)\\\"/&gt;\\r\\n                &lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;\\r\\n                &lt;p-message severity=\\\"error\\\" [text]=\\\"userform.controls['password'].errors['required'] ? 'Password is required' : userform.controls['password'].errors['minlength'] ? 'Must be longer than 6 characters' : ''\\\" \\r\\n                        *ngIf=\\\"!userform.controls['password'].valid&&userform.controls['password'].dirty\\\"&gt;&lt;/p-message&gt;\\r\\n                &lt;/div&gt;\\r\\n            &lt;/div&gt;\\r\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;\\r\\n                    Description:\\r\\n                &lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\r\\n                    &lt;textarea pInputTextarea type=\\\"text\\\" formControlName=\\\"description\\\"&gt;&lt;/textarea&gt;\\r\\n                &lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;&lt;/div&gt;\\r\\n            &lt;/div&gt;\\r\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;\\r\\n                    Gender *:\\r\\n                &lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\r\\n                    &lt;p-dropdown [options]=\\\"genders\\\" formControlName=\\\"gender\\\"&gt;&lt;/p-dropdown&gt;\\r\\n                &lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;\\r\\n                    &lt;p-message severity=\\\"error\\\" text=\\\"Gender is required\\\" *ngIf=\\\"!userform.controls['gender'].valid&&userform.controls['gender'].dirty\\\"&gt;&lt;/p-message&gt;\\r\\n                &lt;/div&gt;\\r\\n            &lt;/div&gt;\\r\\n            &lt;div class=\\\"ui-grid-row\\\"&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-2\\\"&gt;&lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-6\\\"&gt;\\r\\n                    &lt;button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"!userform.valid\\\"&gt;&lt;/button&gt;\\r\\n                &lt;/div&gt;\\r\\n                &lt;div class=\\\"ui-grid-col-4\\\"&gt;&lt;/div&gt;\\r\\n            &lt;/div&gt;\\r\\n            &lt;div style=\\\"text-align:center;margin-top:20px\\\" *ngIf=\\\"submitted\\\"&gt;\\r\\n                Form Submitted\\r\\n                &lt;br&gt;\\r\\n                {{diagnostic}}\\r\\n            &lt;/div&gt;\\r\\n        &lt;/div&gt;\\r\\n    &lt;/p-panel&gt;\\r\\n&lt;/form&gt;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\\r\\n\"","import {NgModule,Component,Input,Output,EventEmitter,ElementRef,ContentChild} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule,Footer} from '../common/shared';\r\nimport {BlockableUI} from '../common/blockableui';\r\nimport {trigger,state,style,transition,animate} from '@angular/animations';\r\n\r\nlet idx: number = 0;\r\n\r\n@Component({\r\n    selector: 'p-panel',\r\n    template: `\r\n        <div [attr.id]=\"id\" [ngClass]=\"'ui-panel ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <div [ngClass]=\"{'ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all': true, 'ui-panel-titlebar-clickable': (toggleable && toggler === 'header')}\" \r\n                *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\">\r\n                <span class=\"ui-panel-title\" *ngIf=\"header\">{{header}}</span>\r\n                <ng-content select=\"p-header\"></ng-content>\r\n                <a *ngIf=\"toggleable\" [attr.id]=\"id + '-label'\" class=\"ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default\" tabindex=\"0\"\r\n                    (click)=\"onIconClick($event)\" (keydown.enter)=\"onIconClick($event)\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"!collapsed\">\r\n                    <span [class]=\"collapsed ? expandIcon : collapseIcon\"></span>\r\n                </a>\r\n            </div>\r\n            <div [attr.id]=\"id + '-content'\" class=\"ui-panel-content-wrapper\" [@panelContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\" (@panelContent.done)=\"onToggleDone($event)\"\r\n                [ngClass]=\"{'ui-panel-content-wrapper-overflown': collapsed||animating}\"\r\n                role=\"region\" [attr.aria-hidden]=\"collapsed\" [attr.aria-labelledby]=\"id + '-label'\">\r\n                <div class=\"ui-panel-content ui-widget-content\">\r\n                    <ng-content></ng-content>\r\n                </div>\r\n                \r\n                <div class=\"ui-panel-footer ui-widget-content\" *ngIf=\"footerFacet\">\r\n                    <ng-content select=\"p-footer\"></ng-content>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    animations: [\r\n        trigger('panelContent', [\r\n            state('hidden', style({\r\n                height: '0',\r\n                opacity: 0\r\n            })),\r\n            state('void', style({\r\n                height: '{{height}}',\r\n                opacity: '{{opacity}}'\r\n            }), {params: {height: '0', opacity: '0'}}),\r\n            state('visible', style({\r\n                height: '*',\r\n                opacity: 1\r\n            })),\r\n            transition('visible <=> hidden', animate('{{transitionParams}}')),\r\n            transition('void => hidden', animate('{{transitionParams}}')),\r\n            transition('void => visible', animate('{{transitionParams}}'))\r\n        ])\r\n    ]\r\n})\r\nexport class Panel implements BlockableUI {\r\n\r\n    @Input() toggleable: boolean;\r\n\r\n    @Input() header: string;\r\n\r\n    @Input() collapsed: boolean = false;\r\n    \r\n    @Input() style: any;\r\n    \r\n    @Input() styleClass: string;\r\n    \r\n    @Input() expandIcon: string = 'pi pi-plus';\r\n    \r\n    @Input() collapseIcon: string = 'pi pi-minus';\r\n  \r\n    @Input() showHeader: boolean = true;\r\n\r\n    @Input() toggler: string = \"icon\";\r\n    \r\n    @Output() collapsedChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onBeforeToggle: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onAfterToggle: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\r\n\r\n    @ContentChild(Footer, { static: false }) footerFacet;\r\n    \r\n    animating: boolean;\r\n    \r\n    id: string = `ui-panel-${idx++}`;\r\n    \r\n    constructor(private el: ElementRef) {}\r\n\r\n    onHeaderClick(event: Event) {\r\n        if (this.toggler === 'header') {\r\n            this.toggle(event);\r\n        }\r\n    }\r\n\r\n    onIconClick(event: Event) {\r\n        if (this.toggler === 'icon') {\r\n            this.toggle(event);\r\n        }\r\n    }\r\n    \r\n    toggle(event: Event) {\r\n        if(this.animating) {\r\n            return false;\r\n        }\r\n        \r\n        this.animating = true;\r\n        this.onBeforeToggle.emit({originalEvent: event, collapsed: this.collapsed});\r\n        \r\n        if(this.toggleable) {\r\n            if(this.collapsed)\r\n                this.expand(event);\r\n            else\r\n                this.collapse(event);\r\n        }\r\n        \r\n        event.preventDefault();\r\n    }\r\n    \r\n    expand(event) {\r\n        this.collapsed = false;\r\n        this.collapsedChange.emit(this.collapsed);\r\n    }\r\n    \r\n    collapse(event) {\r\n        this.collapsed = true;\r\n        this.collapsedChange.emit(this.collapsed);\r\n    }\r\n    \r\n    getBlockableElement(): HTMLElement {\r\n        return this.el.nativeElement.children[0];\r\n    }\r\n    \r\n    onToggleDone(event: Event) {\r\n        this.animating = false;\r\n        this.onAfterToggle.emit({originalEvent: event, collapsed: this.collapsed});\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Panel,SharedModule],\r\n    declarations: [Panel]\r\n})\r\nexport class PanelModule { }\r\n","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {ValidationDemo} from './validationdemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: ValidationDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class ValidationDemoRoutingModule {}\r\n","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule,ReactiveFormsModule}    from '@angular/forms';\r\nimport {ValidationDemo} from './validationdemo';\r\nimport {ValidationDemoRoutingModule} from './validationdemo-routing.module';\r\nimport {ToastModule} from '../../../components/toast/toast';\r\nimport {MessageModule} from '../../../components/message/message';\r\nimport {PanelModule} from '../../../components/panel/panel';\r\nimport {DropdownModule} from '../../../components/dropdown/dropdown';\r\nimport {InputTextModule} from '../../../components/inputtext/inputtext';\r\nimport {InputTextareaModule} from '../../../components/inputtextarea/inputtextarea';\r\nimport {ButtonModule} from '../../../components/button/button';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n\t\tValidationDemoRoutingModule,\r\n        ToastModule,\r\n        MessageModule,\r\n        PanelModule,\r\n        DropdownModule,\r\n        InputTextModule,\r\n        InputTextareaModule,\r\n        ButtonModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tValidationDemo\r\n\t]\r\n})\r\nexport class ValidationDemoModule {}\r\n","import {Component,OnInit} from '@angular/core';\r\nimport {Validators,FormControl,FormGroup,FormBuilder} from '@angular/forms';\r\nimport {SelectItem} from '../../../components/common/api';\r\nimport {MessageService} from '../../../components/common/messageservice';\r\n\r\n@Component({\r\n    templateUrl: './validationdemo.html',\r\n    providers: [MessageService]\r\n})\r\nexport class ValidationDemo implements OnInit {\r\n    \r\n    userform: FormGroup;\r\n    \r\n    submitted: boolean;\r\n    \r\n    genders: SelectItem[];\r\n    \r\n    description: string;\r\n    \r\n    constructor(private fb: FormBuilder, private messageService: MessageService) {}\r\n    \r\n    ngOnInit() {\r\n        this.userform = this.fb.group({\r\n            'firstname': new FormControl('', Validators.required),\r\n            'lastname': new FormControl('', Validators.required),\r\n            'password': new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n            'description': new FormControl(''),\r\n            'gender': new FormControl('', Validators.required)\r\n        });\r\n        \r\n        this.genders = [];\r\n        this.genders.push({label:'Select Gender', value:''});\r\n        this.genders.push({label:'Male', value:'Male'});\r\n        this.genders.push({label:'Female', value:'Female'});\r\n    }\r\n    \r\n    onSubmit(value: string) {\r\n        this.submitted = true;\r\n        this.messageService.add({severity:'info', summary:'Success', detail:'Form Submitted', sticky: true});\r\n    }\r\n    \r\n    get diagnostic() { return JSON.stringify(this.userform.value); }\r\n    \r\n}\r\n"],"sourceRoot":""}